<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
        <calculation class='tableau' formula='#2020-01-01#' />
      </column>
      <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
        <calculation class='tableau' formula='#2023-07-02#' />
      </column>
    </datasource>
    <datasource caption='owid-covid-data' inline='true' name='federated.10nbix70ut3yd61edxnfr18fi4b7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid_Data' name='textscan.1h3kp9u1u6a4tc15tqaah01zflg7'>
            <connection class='textscan' directory='/Users/souravkumarjha/Desktop/Project' filename='Covid_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1h3kp9u1u6a4tc15tqaah01zflg7' name='Covid_Data.csv' table='[Covid_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='total_tests' ordinal='25' />
            <column datatype='string' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='string' name='total_boosters' ordinal='37' />
            <column datatype='real' name='new_vaccinations' ordinal='38' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='real' name='population_density' ordinal='48' />
            <column datatype='real' name='median_age' ordinal='49' />
            <column datatype='real' name='aged_65_older' ordinal='50' />
            <column datatype='real' name='aged_70_older' ordinal='51' />
            <column datatype='real' name='gdp_per_capita' ordinal='52' />
            <column datatype='string' name='extreme_poverty' ordinal='53' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
            <column datatype='real' name='diabetes_prevalence' ordinal='55' />
            <column datatype='string' name='female_smokers' ordinal='56' />
            <column datatype='string' name='male_smokers' ordinal='57' />
            <column datatype='real' name='handwashing_facilities' ordinal='58' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
            <column datatype='real' name='life_expectancy' ordinal='60' />
            <column datatype='real' name='human_development_index' ordinal='61' />
            <column datatype='real' name='population' ordinal='62' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='string' name='excess_mortality' ordinal='65' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1h3kp9u1u6a4tc15tqaah01zflg7' name='Covid_Data.csv' table='[Covid_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='total_tests' ordinal='25' />
            <column datatype='string' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='string' name='total_boosters' ordinal='37' />
            <column datatype='real' name='new_vaccinations' ordinal='38' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='real' name='population_density' ordinal='48' />
            <column datatype='real' name='median_age' ordinal='49' />
            <column datatype='real' name='aged_65_older' ordinal='50' />
            <column datatype='real' name='aged_70_older' ordinal='51' />
            <column datatype='real' name='gdp_per_capita' ordinal='52' />
            <column datatype='string' name='extreme_poverty' ordinal='53' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
            <column datatype='real' name='diabetes_prevalence' ordinal='55' />
            <column datatype='string' name='female_smokers' ordinal='56' />
            <column datatype='string' name='male_smokers' ordinal='57' />
            <column datatype='real' name='handwashing_facilities' ordinal='58' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
            <column datatype='real' name='life_expectancy' ordinal='60' />
            <column datatype='real' name='human_development_index' ordinal='61' />
            <column datatype='real' name='population' ordinal='62' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='string' name='excess_mortality' ordinal='65' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[Covid_Data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Share of people partially vaccinated' datatype='real' name='[Calculation_2957246517765300224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([people_vaccinated])/MAX([population])' />
      </column>
      <column caption='Smokers' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_2957246517790961669]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[female_smokers]+[male_smokers]' />
      </column>
      <column caption='Death Expectancy' datatype='real' name='[Calculation_2957246517827067911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100-[life_expectancy]' />
      </column>
      <column caption='Deaths/10k' datatype='real' name='[Calculation_2957246517830656008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_deaths_per_million]*100' />
      </column>
      <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
      </column>
      <column caption='Datasource date' datatype='date' datatype-customized='true' name='[Calculation_2957246518058438667]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATE(25/10/2021)' />
      </column>
      <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[location]' />
      </column>
      <column caption='Share of People not vaccinated' datatype='real' name='[People vaccinated over population (copy)_2957246517765496833]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-(MAX([people_vaccinated])/MAX([population]))' />
      </column>
      <column caption='Share of people Fully vaccinated ' datatype='real' name='[Share of people partially vaccinated (copy)_2957246517765943298]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([people_fully_vaccinated])/MAX([population])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Covid_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='string' name='[excess_mortality]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative' datatype='string' name='[excess_mortality_cumulative]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='string' name='[excess_mortality_cumulative_absolute]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='string' name='[excess_mortality_cumulative_per_million]' role='dimension' type='nominal' />
      <column caption='Extreme Poverty' datatype='string' name='[extreme_poverty]' role='dimension' type='nominal' />
      <column caption='Female Smokers' datatype='string' name='[female_smokers]' role='dimension' type='nominal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='string' name='[male_smokers]' role='dimension' type='nominal' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='real' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='string' name='[total_boosters]' role='dimension' type='nominal' />
      <column caption='Total Boosters Per Hundred' datatype='string' name='[total_boosters_per_hundred]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_2957246517790961669]' derivation='Max' name='[max:Calculation_2957246517790961669:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2957246517827067911]' derivation='Max' name='[max:Calculation_2957246517827067911:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Max' name='[max:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2957246517790961669]' derivation='Sum' name='[sum:Calculation_2957246517790961669:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2957246517827067911]' derivation='Sum' name='[sum:Calculation_2957246517827067911:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2957246517765300224]' derivation='User' name='[usr:Calculation_2957246517765300224:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Share of people partially vaccinated (copy)_2957246517765943298]' derivation='User' name='[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:Calculation_2957246517790961669:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Calculation_2957246517765300224:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:Calculation_2957246517827067911:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:Calculation_2957246517790961669:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:Calculation_2957246517827067911:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
          <calculation class='tableau' formula='#2020-01-01#' />
        </column>
        <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
          <calculation class='tableau' formula='#2023-07-02#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid_Data.csv' id='Covid_Data.csv_AE671593C0CD45BAA6D5C8E7C12C9B97'>
            <properties context=''>
              <relation connection='textscan.1h3kp9u1u6a4tc15tqaah01zflg7' name='Covid_Data.csv' table='[Covid_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='real' name='total_tests' ordinal='25' />
                  <column datatype='string' name='new_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='real' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='total_vaccinations' ordinal='34' />
                  <column datatype='real' name='people_vaccinated' ordinal='35' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='string' name='total_boosters' ordinal='37' />
                  <column datatype='real' name='new_vaccinations' ordinal='38' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
                  <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
                  <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='45' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
                  <column datatype='real' name='stringency_index' ordinal='47' />
                  <column datatype='real' name='population_density' ordinal='48' />
                  <column datatype='real' name='median_age' ordinal='49' />
                  <column datatype='real' name='aged_65_older' ordinal='50' />
                  <column datatype='real' name='aged_70_older' ordinal='51' />
                  <column datatype='real' name='gdp_per_capita' ordinal='52' />
                  <column datatype='string' name='extreme_poverty' ordinal='53' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='55' />
                  <column datatype='string' name='female_smokers' ordinal='56' />
                  <column datatype='string' name='male_smokers' ordinal='57' />
                  <column datatype='real' name='handwashing_facilities' ordinal='58' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
                  <column datatype='real' name='life_expectancy' ordinal='60' />
                  <column datatype='real' name='human_development_index' ordinal='61' />
                  <column datatype='real' name='population' ordinal='62' />
                  <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='63' />
                  <column datatype='string' name='excess_mortality_cumulative' ordinal='64' />
                  <column datatype='string' name='excess_mortality' ordinal='65' />
                  <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='66' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.10nbix70ut3yd61edxnfr18fi4b7'>
      <datasources>
        <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
      </datasources>
      <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
        <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
        </column>
        <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[location]' />
        </column>
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_2957246518048829450]' derivation='None' name='[none:Calculation_2957246518048829450:nk]' pivot='key' type='nominal' />
        <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]'>
        <groupfilter function='member' level='[none:Calculation_2957246518048829450:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]'>
        <groupfilter function='level-members' level='[none:Location (copy)_2957246517766057987:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]'>
        <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_627E09F538BF49108BB62EF2C58B282C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Vaccinated per hundred' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_42BA4D8A1237478B869B3D9D2834083D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='partially vs fully for location' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_0E8A107C36E44E44B9F123B5E04A0CFA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Vaccinated over GDP' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_BEDA1876DDA44B499C036DBAF30DFFA9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Not Vaccinated' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_BB97244E6DCE41B6A7B1AD731DFA573E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Partially vaccinated' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_3E7D84A057324C6DAE17AAF2E99D6781]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Fully Vaccinated' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Datasource date'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
              <calculation class='tableau' formula='#2020-01-01#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
              <calculation class='tableau' formula='#2023-07-02#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
            <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
            </column>
            <column caption='Datasource date' datatype='date' datatype-customized='true' name='[Calculation_2957246518058438667]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(25/10/2021)' />
            </column>
            <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2957246518048829450]' derivation='None' name='[none:Calculation_2957246518048829450:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2957246518058438667]' derivation='Day-Trunc' name='[tdy:Calculation_2957246518058438667:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[tdy:Calculation_2957246518058438667:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>DataSource Last Updated on </run>
                <run bold='true' fontsize='10'>02-07-2023</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F58958F6-F46D-41A8-A54F-BC51461F1B6F}' />
    </worksheet>
    <worksheet name='Fully Vaccinated'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
              <calculation class='tableau' formula='#2020-01-01#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
              <calculation class='tableau' formula='#2023-07-02#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
            <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
            </column>
            <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[people_fully_vaccinated]' derivation='Max' name='[max:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2957246518048829450]' derivation='None' name='[none:Calculation_2957246518048829450:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:people_fully_vaccinated:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f1ce63' fontsize='14'><![CDATA[<[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:people_fully_vaccinated:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f1ce63' fontsize='10'>People Fully Vaccinated</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E43890A8-B55E-434B-9601-EEFD7F7F0822}' />
    </worksheet>
    <worksheet name='Not Vaccinated'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
              <calculation class='tableau' formula='#2020-01-01#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
              <calculation class='tableau' formula='#2023-07-02#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
            <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
            </column>
            <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Share of People not vaccinated' datatype='real' name='[People vaccinated over population (copy)_2957246517765496833]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-(MAX([people_vaccinated])/MAX([population]))' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2957246518048829450]' derivation='None' name='[none:Calculation_2957246518048829450:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[People vaccinated over population (copy)_2957246517765496833]' derivation='User' name='[usr:People vaccinated over population (copy)_2957246517765496833:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:People vaccinated over population (copy)_2957246517765496833:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:People vaccinated over population (copy)_2957246517765496833:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f1ce63' fontsize='14'><![CDATA[<[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:People vaccinated over population (copy)_2957246517765496833:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f1ce63' fontsize='10'>Share of People Not Vaccinated</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F435F0BB-52CC-4D75-9CAD-0D68AB106D28}' />
    </worksheet>
    <worksheet name='Partially vaccinated'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
              <calculation class='tableau' formula='#2020-01-01#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
              <calculation class='tableau' formula='#2023-07-02#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
            <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
            </column>
            <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[people_vaccinated]' derivation='Max' name='[max:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2957246518048829450]' derivation='None' name='[none:Calculation_2957246518048829450:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' value='Country'>
              <formatted-text>
                <run>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:people_vaccinated:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f1ce63' fontsize='14'><![CDATA[<[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:people_vaccinated:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f1ce63' fontsize='10'>People Partially Vaccinated</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E0BD6784-A38F-4531-854B-F602410350AC}' />
    </worksheet>
    <worksheet name='Vaccinated over GDP'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
              <calculation class='tableau' formula='#2020-01-01#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
              <calculation class='tableau' formula='#2023-07-02#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
            <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
            </column>
            <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Max' name='[max:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_vaccinated_per_hundred]' derivation='Max' name='[max:people_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2957246518048829450]' derivation='None' name='[none:Calculation_2957246518048829450:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:gdp_per_capita:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:people_vaccinated_per_hundred:qk]' included-values='non-null' />
          <slices>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:gdp_per_capita:qk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:people_vaccinated_per_hundred:qk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' />
              <lod column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='3' />
                <format attr='stroke-color' value='#b6992d9d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:people_vaccinated_per_hundred:qk]</rows>
        <cols>[federated.10nbix70ut3yd61edxnfr18fi4b7].[max:gdp_per_capita:qk]</cols>
      </table>
      <simple-id uuid='{930CF445-2309-4282-8309-8B0FD8E1DE58}' />
    </worksheet>
    <worksheet name='Vaccinated per hundred'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
              <calculation class='tableau' formula='#2020-01-01#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
              <calculation class='tableau' formula='#2023-07-02#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
            <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
            </column>
            <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2957246518048829450]' derivation='None' name='[none:Calculation_2957246518048829450:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
            <column-instance column='[people_vaccinated_per_hundred]' derivation='Sum' name='[sum:people_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[Latitude (generated)]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[Longitude (generated)]' field-type='quantitative' max='6286100.0033441177' min='-4447232.1471703323' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[Latitude (generated)]' field-type='quantitative' max='2061326.9307512755' min='-788715.44203231391' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:people_vaccinated_per_hundred:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cedce2</color>
                <color>#aec8d4</color>
                <color>#90b5c6</color>
                <color>#75a3b8</color>
                <color>#5c91aa</color>
                <color>#47819c</color>
                <color>#33718e</color>
                <color>#226280</color>
                <color>#145472</color>
                <color>#094764</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' value='false' />
            <format attr='break-on-special' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:people_vaccinated_per_hundred:qk]' />
              <lod column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' />
              <geometry column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#787878'>People Vaccinated Per Hundred:&#9;</run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:people_vaccinated_per_hundred:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.10nbix70ut3yd61edxnfr18fi4b7].[Latitude (generated)]</rows>
        <cols>[federated.10nbix70ut3yd61edxnfr18fi4b7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{365AB380-DE2D-470A-B4CD-4F04A93A2FB6}' />
    </worksheet>
    <worksheet name='partially vs fully for location'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
              <calculation class='tableau' formula='#2020-01-01#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
              <calculation class='tableau' formula='#2023-07-02#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
            <column caption='Share of people partially vaccinated' datatype='real' name='[Calculation_2957246517765300224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([people_vaccinated])/MAX([population])' />
            </column>
            <column caption='Filter Date' datatype='boolean' name='[Calculation_2957246518048829450]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[date] &gt;= [Parameters].[Parameter 1] AND [date] &lt;= [Parameters].[Start Date (copy)_2957246518048587785]' />
            </column>
            <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Share of people Fully vaccinated ' datatype='real' name='[Share of people partially vaccinated (copy)_2957246517765943298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([people_fully_vaccinated])/MAX([population])' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2957246518048829450]' derivation='None' name='[none:Calculation_2957246518048829450:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2957246517765300224]' derivation='User' name='[usr:Calculation_2957246517765300224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Share of people partially vaccinated (copy)_2957246517765943298]' derivation='User' name='[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' direction='DESC' using='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Calculation_2957246517765300224:qk]' />
          <filter class='quantitative' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Calculation_2957246517765300224:qk]' included-values='in-range'>
            <min>0.0028634751023365146</min>
            <max>1.0</max>
          </filter>
          <filter class='quantitative' column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]' included-values='in-range'>
            <min>0.0028178568693804913</min>
            <max>1.0</max>
          </filter>
          <slices>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Calculation_2957246517765300224:qk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]</column>
            <column>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Calculation_2957246517765300224:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Calculation_2957246517765300224:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[:Measure Names]' />
              <text column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Calculation_2957246517765300224:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[:Measure Names]' />
              <text column='[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</rows>
        <cols>([federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Calculation_2957246517765300224:qk] + [federated.10nbix70ut3yd61edxnfr18fi4b7].[usr:Share of people partially vaccinated (copy)_2957246517765943298:qk])</cols>
      </table>
      <simple-id uuid='{08247DE9-23A9-45F2-B564-6E6F18F7D67E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1810' maxwidth='1200' minheight='1810' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='owid-covid-data' name='federated.10nbix70ut3yd61edxnfr18fi4b7' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-01#'>
          <calculation class='tableau' formula='#2020-01-01#' />
        </column>
        <column caption='End Date' datatype='date' name='[Start Date (copy)_2957246518048587785]' param-domain-type='any' role='measure' type='quantitative' value='#2023-07-02#'>
          <calculation class='tableau' formula='#2023-07-02#' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.10nbix70ut3yd61edxnfr18fi4b7'>
        <column caption='Location (copy)' datatype='string' name='[Location (copy)_2957246517766057987]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[location]' />
        </column>
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column-instance column='[Location (copy)_2957246517766057987]' derivation='None' name='[none:Location (copy)_2957246517766057987:nk]' pivot='key' type='nominal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='99116' id='10' param='horz' type-v2='layout-flow' w='98666' x='667' y='442'>
            <zone h='99116' id='8' type-v2='layout-basic' w='98666' x='667' y='442'>
              <zone h='74560' id='3' param='vert' type-v2='layout-flow' w='98666' x='667' y='24998'>
                <zone fixed-size='45' h='2928' id='18' is-fixed='true' name='partially vs fully for location' pane-specification-id='1' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[:Measure Names]' show-title='false' type-v2='color' w='98666' x='667' y='24998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='387' h='21823' id='17' is-fixed='true' name='partially vs fully for location' w='98666' x='667' y='27926'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='328' h='18564' id='19' is-fixed='true' name='Vaccinated per hundred' w='98666' x='667' y='49749'>
                  <layout-cache minheight='216' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='1657' id='25' type-v2='text' w='98666' x='667' y='68313'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#1c3d6a' fontsize='12'>How Does GDP per Capita Affects Vaccination?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone fixed-size='465' h='26133' id='21' is-fixed='true' name='Vaccinated over GDP' w='98666' x='667' y='69970'>
                  <layout-cache minheight='170' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='2376' id='23' name='Datasource date' w='98666' x='667' y='96103'>
                  <layout-cache fixed-size-h='35' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='6723' id='5' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='98666' x='667' y='442'>
                <zone fixed-size='93' forceUpdate='true' h='6740' id='6' is-fixed='true' type-v2='text' w='98666' x='667' y='442'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Arial Black' fontsize='18'>COVID-19 Global Vaccine Tracker</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='11'>70.3% of the world population has recieved at least one dose of COVID-19 Vaccine.</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='11'>13.47 Billion doses have been administered globally ,and 48,794 are now registered each day</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='background-color' value='#1c3d6a' />
                </zone-style>
              </zone>
              <zone h='5495' id='22' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='31334' x='35333' y='19503'>
                <zone h='5469' id='7' name='Partially vaccinated' w='31334' x='35333' y='19503'>
                  <layout-cache cell-count-w='1' fixed-size-h='59' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='5495' id='15' name='Fully Vaccinated' w='34666' x='667' y='19503'>
                <layout-cache fixed-size-h='59' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5495' id='16' name='Not Vaccinated' w='32666' x='66667' y='19503'>
                <layout-cache fixed-size-h='59' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2111' id='11' mode='checkdropdown' name='Partially vaccinated' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]' show-apply='true' type-v2='filter' w='98666' x='667' y='7165'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f3ebf3' />
                </zone-style>
              </zone>
              <zone h='2278' id='12' mode='pattern' name='Partially vaccinated' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' type-v2='filter' w='98666' x='667' y='9276'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f3ebf3' />
                </zone-style>
              </zone>
              <zone h='2333' id='13' mode='datetime' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='98666' x='667' y='11554'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f3ebf3' />
                </zone-style>
              </zone>
              <zone h='1889' id='14' mode='datetime' param='[Parameters].[Start Date (copy)_2957246518048587785]' type-v2='paramctrl' w='98666' x='667' y='13887'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f3ebf3' />
                </zone-style>
              </zone>
              <zone h='3727' id='24' type-v2='text' w='98666' x='667' y='15776'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#114081' fontsize='12'>What Share of Population is Fully Vaccinated and Partially Vaccinated?</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#fefaf1' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99116' id='34' param='vert' type-v2='layout-flow' w='98666' x='667' y='442'>
                <zone fixed-size='93' forceUpdate='true' h='6740' id='6' type-v2='text' w='98666' x='667' y='442'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Arial Black' fontsize='18'>COVID-19 Global Vaccine Tracker</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='11'>70.3% of the world population has recieved at least one dose of COVID-19 Vaccine.</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='11'>13.47 Billion doses have been administered globally ,and 48,794 are now registered each day</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2333' id='13' mode='datetime' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='98666' x='667' y='11554'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f3ebf3' />
                  </zone-style>
                </zone>
                <zone h='1889' id='14' mode='datetime' param='[Parameters].[Start Date (copy)_2957246518048587785]' type-v2='paramctrl' w='98666' x='667' y='13887'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f3ebf3' />
                  </zone-style>
                </zone>
                <zone h='3727' id='24' type-v2='text' w='98666' x='667' y='15776'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#114081' fontsize='12'>What Share of Population is Fully Vaccinated and Partially Vaccinated?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone fixed-size='91' h='5495' id='15' is-fixed='true' name='Fully Vaccinated' w='34666' x='667' y='19503'>
                  <layout-cache fixed-size-h='59' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2111' id='11' mode='checkdropdown' name='Partially vaccinated' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]' show-apply='true' type-v2='filter' w='98666' x='667' y='7165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f3ebf3' />
                  </zone-style>
                </zone>
                <zone h='2278' id='12' mode='pattern' name='Partially vaccinated' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' type-v2='filter' w='98666' x='667' y='9276'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f3ebf3' />
                  </zone-style>
                </zone>
                <zone fixed-size='91' h='5469' id='7' is-fixed='true' name='Partially vaccinated' w='31334' x='35333' y='19503'>
                  <layout-cache cell-count-w='1' fixed-size-h='59' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='91' h='5495' id='16' is-fixed='true' name='Not Vaccinated' w='32666' x='66667' y='19503'>
                  <layout-cache fixed-size-h='59' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='21823' id='17' is-fixed='true' name='partially vs fully for location' w='98666' x='667' y='27926'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='45' h='2928' id='18' name='partially vs fully for location' pane-specification-id='1' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[:Measure Names]' show-title='false' type-v2='color' w='98666' x='667' y='24998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='18564' id='19' is-fixed='true' name='Vaccinated per hundred' w='98666' x='667' y='49749'>
                  <layout-cache minheight='216' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1657' id='25' type-v2='text' w='98666' x='667' y='68313'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#1c3d6a' fontsize='12'>How Does GDP per Capita Affects Vaccination?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#fefaf1' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='26133' id='21' is-fixed='true' name='Vaccinated over GDP' w='98666' x='667' y='69970'>
                  <layout-cache minheight='170' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='35' h='2376' id='23' is-fixed='true' name='Datasource date' w='98666' x='667' y='96103'>
                  <layout-cache fixed-size-h='35' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4BD9EFFB-B31A-436D-A19C-400BB976F0A8}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Partially vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]' show-apply='true' type='filter' />
            <card mode='checkdropdown' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]' type='filter' />
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Start Date (copy)_2957246518048587785]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Calculation_2957246518048829450:nk]</field>
            <field>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</field>
            <field>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:continent:nk]</field>
            <field>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE649F48-9383-42BE-A430-B6F77B355A07}' />
    </window>
    <window class='worksheet' name='Fully Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7700395F-CF44-4192-8FE7-B5BF96F2F579}' />
    </window>
    <window class='worksheet' name='Not Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F389676E-0290-4BF0-8D72-E23407FD155F}' />
    </window>
    <window class='worksheet' name='partially vs fully for location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4FFF3AA-25F7-4CD6-95BD-8702179EF4D1}' />
    </window>
    <window class='worksheet' name='Vaccinated per hundred'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10nbix70ut3yd61edxnfr18fi4b7].[sum:people_vaccinated_per_hundred:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD57D382-120B-424E-97D0-3FB34070BB7B}' />
    </window>
    <window class='worksheet' name='Vaccinated over GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10nbix70ut3yd61edxnfr18fi4b7].[none:Location (copy)_2957246517766057987:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{419AF33D-1C65-4B2E-8F7B-FBD6887661B7}' />
    </window>
    <window class='worksheet' name='Datasource date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10nbix70ut3yd61edxnfr18fi4b7].[tyr:Calculation_2957246518058438667:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1E06A607-2F83-4619-8DCC-C0AF65E26604}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Datasource date' />
        <viewpoint name='Fully Vaccinated'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Not Vaccinated' />
        <viewpoint name='Partially vaccinated'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Vaccinated over GDP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccinated per hundred'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='partially vs fully for location'>
          <highlight field='[federated.10nbix70ut3yd61edxnfr18fi4b7].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E9EE0F59-A1BD-4915-8C18-4D426BC73823}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      ro62fPrKYuyszXlq6USmjO6DtaUpu8LOk5JRgJ+HM5++shipRNJqeS0djYrT9X+PDdUGgpt3
      XYlpecQlZzM2NIgnl0ygq6MtZy4lc+z8Nbo42PLcSu0J2N/TmZ///ii9AtxpVCopLq2im1cX
      1r+6hMG9/e5YbiI3xL1LZ9y7dMbE2AhzU2Pt566dee3R6XSyscDURM7CKUMICfSgm1cXfvr7
      I/QO8CA2OZvouDSC/N34+s1V9Ozm3moblU0qGhVNNDZ7jqFWa7TfKZpQqzXYWpvj3qUzoSH+
      BPu7oVarsbUyu+vtFncAQsfT7PxS36DQ/W1mKqe2rrHZJNr/b/kAtb5Rofc5ITWXuORsAn1d
      GBcaTEpmIQZS7bXVb4fv3P3TnEKhbLY+xnz/7hrd58Mnr7Dt4Fn2RcYA8Noj01vNv2FLBH0C
      PQkJ9CTh0Ed6Zc1PzDfJDW+dAhRNTViYmfDw/DF60/y063ir+ZZMGwpoH36OW/4eE4f15Mt1
      K/BydWBgL1/ddBqNhgkr38fTxZ4Nb67E3NSYkEBPPv5xPzvCztMn0AMDqVTXHWdlYYq9nWX7
      DXRDk0rNrrDzrJozimB/V/oFeevquNnlduxcAsMXvsng3n4om5oYNTBQN7+3uyPdvbtgLDek
      SaViwor3KSiu4MmlEyguraKkopqZ4/rdtrxTswf4Lb2xfjuFJZW6rjxXp04E+rpgZChDo9Hw
      /fajKJUqBvT0xlAmY/rYvlxOyLjjdt/OQ69/R9SlZGrrFcRcy7ir7RYBQOhwspv11wZ4d9Fd
      dX/xxnICvLty6MRlXv9sO7mFZbh36YxH187YWJlRXlmLhZkJXi7at3nymr2ts+1gFIG+Lni4
      2LNm7igAkjPyuZqY9YfWLcD71hV5WUUNY0NvPUvIyC2+4/xhp64y/+l/MmlEbxoUSqqq63lq
      mfaZRvM3lJrXGdrHH4CQ7h6cvpjEcx9spGc3dxZMDm13OTZW2pNfenYxKpWa65mFujKHZidw
      lVpNQmqu3l2QlYUpIwZ0592n52JpbkJZZQ15RbfaUiq9u46JbQfPsmrOKCQSCe89OxeJRIJK
      pWZX+HkAPFw68+3bq3Hv0plGhZIrzfaFVCLRbUNldb3umFj/0yHdCwB3Ku/U+1aga+ns5eso
      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
    </thumbnail>
    <thumbnail height='48' name='Datasource date' width='384'>
      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
      1AKAtm8TEhIoKCgAoFu3blhbW6NQKFAoFFy6dInNmzfj6+trUL6mpoa//e1v7Nu3D41Gg5WV
      la6Nrl27RkJCgknZDW13S9ovJSWFxYsXU1BQQKdOnRg6dCjl5eWkpqZy69Ytbt68ybp16wxO
      31linzEs8eGysjJOnz5NWloaJ0+e5Pvvvwce/+66du3KDz/8QGJiInPmzOHo0aO4uLgY1eGF
      DQAAvr6+HD9+HIVCofdckiTatGnDmDFj+M1vfoOXlxcy2ePVrpycHNatW0diYiJ/+ctf2Lx5
      MwDTp0/njTfeACA4OBgnJycOHjxoILN9+/YWyQGws7Nj0qRJHDp0iBUrVpCQkMCMGTOMjoZN
      cerUKQ4cOICDgwOrV69m+PDhurQrV66wdOlSTpw4gbu7O9OmTat3vfVFkiT+/Oc/ExkZiYOD
      A9u2baNr1656eZYsWcK1a9dwc3NjxYoV+Pv7I5PJKCkp4fjx40RHR+vlP3bsGJGRkXTu3Jlt
      27bp7X2EhYWxa9culi9fzqlTp/jZz37W5DZp7WpMn+7Zs4d79+7h7+/P3Llz6dOnD7a2tqjV
      auLj49m7dy/V1dW6/La2tjr7w8PD2bt3LwsWLGDUqFF6+jSXneYoKytj9uzZTJw4Ube/VlBQ
      wLJly0hMTGT16tVERETo2kXLoUOHCAsLw87Ojg8++IDx48fTunVr4HGAPHnyJFu3bjW6PNHQ
      dm9s+6nVaj755BMKCgqYMmUKISEhOjlKpZL58+fz7bff4uvry+TJk5vMPmM0hQ/fvXsXW1tb
      3nzzTcaOHYuPjw/W1tbcv3+fJUuWkJqaSlRUFLNnzzauhPScMWHCBEkul0uFhYVPzHv9+nVJ
      LpdL8+bN03uu0Wik6upqk+V+/PFHaciQIdLAgQON5hs4cKA0evToJ8q3RI5arZaWL18uyeVy
      SS6XS/3795fmzJkjffXVV1JVVZVZuQ8fPpSCg4MluVwuJSQkGM2Tnp4uBQQESMOGDZNKS0v1
      0r777jtJLpdLoaGhJmWcO3dOksvl0tatW/WeL1q0SJLL5dKaNWskuVwujRs3TsrJyTEo/803
      30hyuVwaO3as9ODBA7P2SJIkVVZWSiNGjJACAgIkhUJhNM+KFSskuVwuhYeHP7G+2jps2LCh
      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
    </thumbnail>
    <thumbnail height='96' name='Fully Vaccinated' width='328'>
      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
    </thumbnail>
    <thumbnail height='96' name='Not Vaccinated' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAABgCAYAAAAU9KWJAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2debQlVX3vv7vmM9yx7zx037490i3SLfPMQ0SIgoJBRCExaiSJLp9PUZIX
      XWiieb7E93RFn8ao0TiLEyIKgkxKQEAEe4Ce6L5N33kezlDj3u+POrfOqVNnPucOePZnrbvW
      rWHv+u06Vb/f3r/9278ijDEGDofD4dQdwloLwOFwOJy1gRsADofDqVO4AeBwOJw6hRsADofD
      qVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6
      hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4
      AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsA
      DofDqVO4AeBwOJw6hRsAzh8NzEmCOYm1FsODOUkwO/ayq5tTP0hrLQDnjx0GJ3YM9tJBOLFj
      oPYimL0IABDUDghqJwStB8qGi0GkaFk1U2MS1sxjcJLDoPowqDkLACCCAiG0EXLLuZA3XAAi
      qDVvVW55JmDNPQl7/llQYwKMmu4BQYYgt0LQOiE37YXU/CoQMbJmdTMnCWv6Udjxo3DiJ0DE
      EMToVkgNuyG3nFOWXNbMb0CNSW9b7X4jQMSy6uCsHYQxxtZaCM4fJ/bS8zBG7oSTHC56LhFD
      UDqvhtp+BSAohU9mFObk/dDH7waWFWEeBKUV2sa3Q2rYVY7oZcGoAWPsZzCn7gcYLV6AiND6
      boLSdtmq1031cSSOfw7UmMh5XG45F6GNf178NwBA9RHEDn3ck0tuORuhgVuLy8hZN/ARAKfm
      UH0M+sgPYC/uK7kMc5IwRn8MJ3YU4S3vA0Dynpc49mk4iZOlyWLOIvHiZxEe+CtIza8qWZ5S
      ceX5P3ASQ+UUAkuNVlazbmpMIX7kk2BOMm9xa+5JMGse4W0fKnopfeROT/kTMQKt76bS5eSs
      C/gcAKemUGMCsUN3lKX8M7EX98OY+EXe4/rInbmVPxEhqO253Q+MIjH073CSL1UkU16YjcSL
      n8mvoIkEQWkFSAWv2QrUbYzd5VP+YngT1O43Qul4DYgY9vbbscOwF54rWJe9eBD24kFvW+u7
      EURqLFkWzvqAjwA4NYVRK4ergkBq3AW59UKI4QEISisYtUD1MZhTv4I19zSAtCfSGPsplA2X
      BuYE7KWDsGZ+469ZaoTWfzPkplcCRAKoCTv+IvRT3wY1xjMEs6Gf+jYi2/8W+UYX5WKM/xxO
      /HigrUrnayE37YEY2gQIMsAoqDnjyj/965IMUa3rdpKnYM095W2L0R2IbPnvnqtHbjkXiaP/
      AkYNAIA++hNEm85AznvFqNv7TyE17IbcekHRNnHWH9wAcFYUMbIVoU1/AUHt9O0nogQxMohQ
      5N0QI1ugD383fZBROIkhSI2v8JXRh7/n2xaUNkR2fMRvKAQFUsNpiGy/HYljn/EpRCf+IuyF
      P0Bq2lN1u6gxAWPiXv9OQUFo0zshN5/p308ECGo7FPUyKG2XwUmcBJHyT9SuRN32wj5kGlmt
      53qfn18MD0DecAHMqYddGfQRUGPaHVVlYc4+BqqPpC6vQtt4S962cNY33AXEWRkEBVrvjYhs
      vz2g/LNR2l8NMdTv25ft+mBOElQf9+3T+t+WN3KISA0Ib/tgIALInH28xAYUxpx+BGB25hUR
      2fI/ggo6B2J4EwSlbVXrzpz0FZRWiJEtgXPklnPzllmGUQPG6F3ettr9xoJt4axvuAHg1BRC
      BIjRHYjuvANKx2tQqrtFCPX6tqk5499ODiOzByuonZAaTy8sixiBlBXWaC/sKzgJWhLMhjX7
      hG+X1HQ6xOi26updwbr9BiDYq8+1P5cBMCfu9cJ4xcgglI4rqpKLs7ZwA8CpKYLWg8i2DxXt
      9WdDzTl/PcoG33Z2KKmgdZdUr9J2qX8Hs31x65Vgx44EFmGpHVdXVedK182s9P3N537KHk0x
      a963Ta05GJP3L5/shovWaD6FszZwA8BZU6gxjqUDH4ITO+ztI4IWVNxZ0T2ZCq0QYnggEP6Z
      ea1KsKYf8W2rnVf7e+iMgupjsOZ/D3vpBTB7ac3rFqPbvf+d5Kmc52RHV4nRHb5jsQMfBqgJ
      QetB4xmfh6D1ZlfBeZnBJ4E5a4YdO4TkiS8FlJjSeSWI1ODbJ2a5iJzkCKgxUdJII3s0ke1e
      Khcnay5C0Lpgxw7Bmn0SNPkSHH0UoJbvHCI1QGrYCbX3zRDkllWvO/M+UWMKTuIkxPAm3znW
      /O8C117GGLkTrguOILTx7W7EFQCAgepjsGPHADgQw4PufE4loa+cVYcbAM7qwyiM8Z/BGL8H
      mX59ABAjW6B0XBUoImg9WXXYSJ78GiLbb0cxN0StDUD2HELy5NeKl7GXYM09DXthP9Se66C0
      X45ccq9U3VLDbhhjP/W2jbG7EB58rzeyovoorJnHvONiqM+7b/bCc7BToyal/XKIkUF3/9Lz
      SA59xZsTWIYIKrT+WyC3nldUds7awg0AZ1WhxgSSJ7+aI8bdddeEt7wfJEcaAiKGIDXsgr30
      vLfPiR9D/PAnofXfDDE8kFXCzUFkLTwLO6tnW6r7KC9VJJxjVHdDXomYO13DCtUtRgYhNe3x
      FnjZi/sRP/Z/ITXuBpgNc+oRXyI9tedNAEgq5v+HAFxDqvZcDwAwp37lWwnsl8NA8uRX4CRP
      Quu9seL2cFYebgA4qwSDOfUIjNEfpBOZZSA1vwqhjX8BIoby1qD134zYoTt8LhAnMYT44U9A
      UFpdNwcRQc05MHMGjOp5aqrGPcG8xVI5IQIEtROi1gOAwDHGQZMjyB7pGKM/gtx0BojPZbOS
      dQNaz3WILR7wQkyd2OGc8yFSwy4vwsqY/KW3oE7rvxlEUEGTw9CHv591XQIQ4jMI5uQDkBp2
      B9ZzcNYP3ABwVhzmJJEc+nLu9BBEhNZ7A5T24uGEgtoBtetaGKM/Chyj5qyXDbQYhYxMCaVd
      /3aGoiNyE+SW8yC3nA0x1JfhH3dx4sehn/qWb1Eac5LQR36A0MC7V6luQNB6Edl2GxInvghm
      LeRsndx8FrRN7wDgTtAb43cDAKTG0z2joI/9BJnKX+1+A5SOKwEQWNOP+FYJG2M/cUcZPFpo
      XcINAGdFocaUm31SHw0cE7QehDa9MzAZWQi182oIUhT6yJ0Vx/NXZwAAIoTAnLi3HR54ty9i
      JhsxMojw9tsRP/RxXwiqnaP3vZJ1u+dvRXTHR2BM3AcnfgxUHwOIBDGyFVLTGVDaLoGrrBmS
      J7/ujraI4LlyqD4Ge+EPXn1y6/lQu67xtpWOK0HNaZhTDwFwo4fs2BFIBdrAWTu4AeCsGE5i
      CIkXP5vjwyUESsdroHVf5+azKRN5w8UQG18BY+RHcOJHA5O6RFAhaF0QtF7ILefCmvutb3EV
      katLWkaksE9JU2OyoJJelknb+GdIHP20t49ZC2BO3Je/fyXr9s6XWzIydy735P09dHPqITjx
      YwAApe0yLyIoez1GIFw3tW/ZAAAATY4C3ACsS7gB4KwIzF5C4vj/Cyh/IrcgPPCuokqtGILc
      gtDAu9xrOQnQ5DAYsyGoXRCUFmQqNGPsLl9ZMbSxqmsTuRkwprxtR59AKWZMimxzXTgZaR5o
      ctQX57+Sdecm6Jqh5jSM0R+7R8Uw1K5r08cyVwcTIWdKCUHrBRHD3qQyNatbeMdZOXiwLqf2
      MIrkiX8LRNuI0W2I7vxo1co/GyKGIUa3Q2rY5aZIzlBq1JgI5BUSAhFD5ZEdceQkTpQqaMD9
      RLNCKFey7lLRX/qGNxmtdl3jWyGcmWHVXauR27efmRo638dnOGsPNwCcmmNOPxrwQUvRHYhs
      /eCq54w3Jx9A5oQlEcMQq1zBKoYHfdtO7LCXHbMwDMiK8sleyLaSdZeCNfMbL9RWUDtTawoy
      L1PiBwQz7QL/6OC6hRsATs0xpx/ybQtKG0KD7w1EsKw0zF6COftfvn1y67lVr1KVGk4LtMWY
      /FXRclSf8IfAEhFiVk6jlay7GMya90XwaL03BFJwCGpH+nx7CdkhqOm60qOPzDKc9QU3AJya
      YscOuZElGchtF1cdeVMu7mKkrwbSJsitF+UtQ605OMlTvr9cECkKufks3z5r9gnYi/sLyqSP
      /di3LWjdAQW7knUXI3nqW15kldSwM+d3E3zKnFE48aCLiupjvkVllYxEOKsDNwCcmmLPP5O1
      h0BuOb8mdTMngdjBD8MYuxu0wGpeZs0hceRTsBcP+PbLzWcWDDnVh76C+KGP+/7y+a/dNMgZ
      fg5mI3H887AC7QcABnPyPtjzv/ftzfeh+pWsOx/W3FMZn4EkUPOs4M1OyWHO/DpwTva+QBoP
      zrqBRwFxago1svPsMMSPfLLsesTwJoQH3xes35yFMX43jIl7IDXshhjqA1HbIUhNoMYY7NiL
      cGKHfT1QIBUq2feWgtdkCKY1yJXqwJVvAEr7Zd4XtNxzHSSHvgSrYRfE6A6IoT5QcxrW3O8C
      K24FpRVq97XIxUrWnQtmL0Ef/o63LW+4KPCBnrRsmyBGt8OJHQEAWDOPQdR6oLS/GgCBOfMY
      zAyXlRjqh9TAQ0DXK9wAcGoKs4KrcfOtOi1YT2DtQPYJFPbi/qKuEQBu7vrNfxNIjVAtas+b
      4MSP+9MoMwp78UBg9JGN1n8LiKCtSd3Z6MPf9e43ETRoPdcVrr/nesSPfCpdfuRO6KM/9GT0
      t+N68FXA6xfuAuLUlFLTMawWRAwjPPieVDqCGtctaAhv/aCXHbMkBAVa31uKf81sBevOxF54
      zvexeKXrdUUjtcTIVqhdr/PvZDSg/JX2y8uShbP68BEAZ12SqwdLBA2hTe9wJ0WXDiFfBIp7
      sgS55RxovTcEvi1QUznFMCLb/hbm1IMwxu/xreLNRoxuR2jj20uOilnJul0Ykqe+7W0JShvU
      EnIyAYDafR0ErRf6S/8ZTGBHJIT63wZ5w8VlyMJZCwhjPEiX8/KDWXOwY8fALDcJHLPmAUGD
      IDdDCPVCanplWW6Q2gjlwI4dghM7CmrNA04SgtoJIdQPMdQPQetExe6QFaqbWQtgzAEAEFED
      EcNlVmDDSQy50UCEQAxtdBez5UjpzVl/cAPA4XA4dQqfA+BwOJw6hRsADofDqVO4AeBwOJw6
      hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4
      AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6hRsADofDqVO4AeBwOJw6ZW2/
      CUwtgBCAFBbDmnsK1vSjAAC153qIkS2rId3LH+bAnH4E9sJzoPo4GHNApAZEtt22ot/JfTnC
      qInki/8KgEEIb4bW+6drLRJnHUCNKe9bzILaUf4nM9c5q24A7IV9MKceBDXGQM05AACRmyCo
      7ZCb9kJuPT+gnKg5Azt2GACg2EurLfLLE2YjfuRTcBJDWbsXAWYXLGpM/Bz24oEcRwQIchOE
      UD+kyCDE6I7aybvWUBN27BAAQBJW9rXIvr9y4xlQOq/Ke37yxBdB7UUIcjNCA7euqGzloI/8
      AE7iOABA7boGUsOuguc7iSHoI98HAIhaL7T+m1dcxmpJnvwynLjbRq3vJijtr15jiWrL6hkA
      aiJx/HOwl14IHGLWPBxrHk7sKPTRHyI0cCvk5jNXTbQ/Rozxe3zKXwz1Q4xsAXOSQJGPpVN9
      Ak7saM5jDgDMPQUDgNSwE1r/zRDUrprJXQ9k31+aOAl5w4V5R2VOYgjUnAFT2morhzGOxPEv
      AgDklnOgdr2urPJEkLx2WHNPFzUA9vwz3vlSZHsFEnOWqfa3W2bVDEDy1Dd8yp8IKsTodoBR
      UHMS1JgGwABGwXgvv2oye5ihTe+A3HpBRfUQQQVE12AwJ+G67ZavsXQIiRc/h8jOO0AEpTqB
      6xhGTRgTv1x1txOjFqg+4v5vzZddXmraC2P85wAAe3E/AAaA5D3fWtiXLtu8t+zrrQVieDOI
      EAIACMqGNZYmTbW/3TKrYgCoMQlr9rcAACJoCG2+1e0tEDHjnCmYUw/AmnlsNUT6o4fqYwBc
      BS41n1VxPaHB92T07BiYtQBz5jGYE78AoyaoMQFj7C5ovW+ugdT1CAHAYE0/DLXztS+ruRkx
      vAmC3AJqzbmj+OQpiKGNOc+l5rSnsIjcAjG8aTVFrRit76a1FmFFWRUD4MRf9P5XOq6A1Hh6
      4BxBbYfW91aoXdeWXC+z5kGNSQAEgtZV4svDwKxFUGseYLY7sVPpS0dNd2JVDOW8DjUm4SRO
      gohhiOEBECla2XW8y826LxFzIIT6IBRwCbCUn18I9dWwd05A5GaoXa+HoLQgefJrAAAnh1vP
      k4MacBJDYOYcxFAfBK0HICUEn1ELTvIUqDUPQW6EENpYfjuoCUcfAaMGxFA/iBgpr3wOKm5P
      HpSOK2BOPgBGDRiTv4TWU90ooJxnpHoIpOY9MKceBuDO7+UzAPbCfu9/uWkP8o0UGDXArHkw
      OwYiqOXfX0bh6KNg9hIEuQWC2u7raAZOt5fgJEdARBWC0lYbA8yo+9zZiykZOgvKkCpUO71U
      5DqZemlVDEA5Lp1SlKQ1/3uYk/d5kzOpklDaLoXW99bgA0NNWPNPw5p90p1MZo7vsKC0Qe2+
      NqebZOnAbQCzIWp9CG+7DQCDNfM4jPGfgpqzkBp2Ibz1A375Zp+APvJ9MDvm2y9GBhEa+CsI
      SmvRNmZiLx6A/tJ/glpzvv1EaoDW91bILWen5d3/fvefVBudxIn0vhTRnR8HkZvKkiEbufUC
      JE99O6VkxwBGffed2UtInvyPlCuKpWUWVKg910FpvyJnvYzq0E99C9bcU26d6YKQGl+J0Ma3
      53xGzKkHYYz/DACg9d8CmjgJc/phd84jhRjqQ2jTuyCE+spub6XtKYbSdimsuafArAVYUw9D
      7biqoo5COc+IPvpDWDOP+e6NOfMbWPNP+8pqfW/zlcuF1LQ3bQAW90Hten0e+f6QLpPl/nGS
      w7BmH4c993RAfggK5MbTofW9BURuySsHNaagD38LduyIz01JpCjk1ouy3GsM5tSDMCfvBzVn
      M/YTiNHt0HreBDEyCAAwxu6COf0IACC85f0QwwO+62bqh9Dmd8OYuBfW7BO+d19QNkDb9A5I
      2UETFeilan67XHppVQyA3HoBjPF7wJwEjPF7YEzcC2XDRZA3XAQxvLmsuhLHPw8QAWJkK5SO
      q0AEGdbcU6DGBMzpR+AkhhDZ8RFfGSf5EpInvwYiNUDZcDEErReC2gbmxGFNPwY7dgjJk/8B
      /dR3EH3FP/tCvZgTB6gF5iRgzT+D5Il/Q6YCQEbEiBM7gvjRfwaQcnVteiekhl1g9hKM8Xtg
      zf8OsYMfhtS0B+HB9xZtq5M8hfihf/CuJ7ecA6n5TAAEzuIBmDO/RnLoS0gOfQnhrbdBatgJ
      ZcPFAABj4j4ADESMQNlwkb/iWowIqJURTUTdhzdlABJHP52OqGnaA7X7WghyC+ylQ9BPfQP6
      8PegD38PkR0f9bkCkie+AGv+9wAAIjVC7XodBLUT1JyGOXEf7IXnsLT//RCj2xHZ9mGfOIya
      3oOdPPFFCFo3lI6rICgbQPURmFMPwUkOI3boYxDDA4FnpBCVtqckiIKGXf8LS8//HZi1gNjB
      2xHd/b9LNgKVPCNSw24QEFB7EdbMfwFwQxzlpjN8dYuhnqLXlxp2QW45D9bcb+HEj8OafQJy
      6/m+c+yF57w5Kbnl3MBksTFyJ+ylFyBFd0BuuwSC2gUiqHCSQzAnH4A1/wys+Wegdr0eavcb
      fWWpNYf48x8Bo0ZK5o2QN1wAQekANSdhzT0Na/ohnwFYfPYv3X+IAKX91RCj2wDmpOR/HE7s
      iGcAmJNIK8zMDkmKZf1gxw5haf8HQOQmSA27IIT6QZPDsOafATVnkDj6Lwhv/htIza/yylai
      lyr57QrppVUxAESKQuu/GcmhL8Od6HVgTj8Kc/pRV/jWCyC3XlBSz1huvRBq9xt858qt5yH2
      /N8DcH2NgevLrQht/mt36Jk1FJNbzkXswIddPybVQZPD7uR0FtSag/7S1wEwELkFatefQG4+
      y/ei6qM/9v4Pb30/xMjW1PWbENp8K+jRBTixo7AX/gCqj7rD2wIYIz/A8outdl0DtfsNabmb
      XwUh1At9+Lupc++EtPOjUHve5G5P3u+6AeQmb18tMcZ/5r0QYmQLIMgAAHvp+bSybNiN8OB7
      sDzcl1vOBpHCSBz7DADAnLzPC2t04sfSyl9uQWT73/l/4+azED/yKVBjHE7sCOyF5yA17ckp
      m9r9xlRURNrNILdeiPjhT4BRHU5iCPbS80WjVqppT1kICtSOq9zeGTVgTt4Ptef6kopW8oxI
      DadBajgNTvKUp0Sk6I6KnxOpeQ+sOXeOz17cl8MAFJ78ldsuhdZ/i+uuyay36ZUgUjP0U98A
      ADixY4GyxvD3POUvt5yN0KZ3+tYVKe1X+HSCkzwFACCCgvDWD3jvqFv+XPe+Z4wgSsXVcbdA
      btrr90CclGDNuvc4WzdVopcq+e0K6aVVWwkst5yDyLYPuf6wDKgxCWPsLsQO3g595E4wahau
      p3lvwFAIamfa15nDSgtKqxtWmtMPRyC1npshz0TO6zJ7CcxJQgz1I7rjI1Da/lvKR+cqA+bE
      4cTdB1Rq2Ol7sJavk3YTsDxx9hnXowbspefdknJLzjAvpf1yz4g4yZeyhrM1wtHdXpCTADUm
      YS8dRPLEF1IjDBe5JX3/7IX0UN91B/h9vVLDbghab+rctGKw5p9Ll+u8OvAbEynqU27W/LN5
      RRZDfYHrCloXlI50DLcTP5G3fCaVtqdclLZLQaRGAIA59VDAfZiL9fKMSI2ne0rXXjyY9Q4y
      WIup+0IkSI2vCJSXm88MKH/vWMtZXt2Bd5PZsBbc54CIIWh9b8u5qDRzHsSefwYAoHRcmeMd
      dV16lbjgBHlZx/hVqtS4O0Nev26qhV4qRjG9tKoLwcTodkRP+0fYSwdhzT4Oa+G5DGvLYE7e
      D2fpBUS2/0+vR1kyJH/4mQejsGMvgBqTqYmmOAAGJzmcPqXAIikxvBnhrR/IOenrTkanzsvx
      YAGAlBpWAu7itkJk/uBy8548q6UJ5OazYIzf7ZWpdaha4sQXCh6Xm8+C0naZt+3dByJAjOR2
      74mRQdDU5Cxz4iBiBNQYT9fZck6ea52JJBHc0OGM80tFajzdC1tkRe7/MpW2p2wEBWrnValO
      kA5z8gGoPdcVkW19PCNEUCE1nAZ7cT+Yk4ATP+aNop3ES16YotRwGkiBNSjUnIUTOwxqzYNZ
      CwBL6wYg+G5SfdxTqlLzmSUpbqqPAgDkDZeU1caKKWUCu0q9VIhiemn1U0EQAVLj6ZAaT4fm
      JGEvPOsq/lRjneQp6GM/qXlYoTn1MIyJX4BlTzKVCJEaEN7yvjwRP+4klHet6Udhzf8ueFLG
      1EFRA6CnX+5CkRyCmn6ZqTEBlODWqAVEboLa+XoobRf79nsPHGOIHfpYzrKZ94qasxBDaQNQ
      sAdGBDfs0JzxPdily5yeRKT2YkllKm1PJchtl8GYuA/MXoQ59SCUzisLGpP19IxIzXtTawEA
      a3GfZwDsxQz3T1Pu2H9qzkI/9c3ABHsxnJQyB5B3BBEokxwFiARByT+hvJpUq5eKUUwvrWku
      ICKGUv7/82GM/gTGxC8AAPbCs0ANDYC98Afow9/B8sNF5CaI4c1uyJoggSZHYM09WbAOQW4p
      EpaVHt4xe6lo5BNzEkWkzhwuFhrdlDDyqQKpaY/njiFCCILaBqK0u6OZgpPJzO2hFWE5zwrY
      8otfrD1VtDflKwYAUu4Is9z2VAAJjALuh9pdaBSwPp4RwA3t1PFNAMx1haXCWdMuNBKYqAQA
      MAfJoS+lQ8WJCDHUBzE8CJJS0ubkA3nepwratfK3omRqoZeKU1gvrW0yOA8Cted6mDO/AbOX
      QI1pMGq4q1CrhFETyZNfxXJETHjL+wLJ5Kz5Z6q+0YLS4f0vRrZC7bqm4PlEbixcX8ZcSaHR
      QqZPV1BK6wWVg9J+eUmTpZ4Mapvnmghteqfn187HchSYoHaCGhNg1J1zyJ10i3lhgqX2+DLJ
      dJkIandJZSptT6X4RwEPQel4bQHZ1sczArhRW2JkEE78RVB9FNScBhEUOImTAFw3Wa7QY2Py
      fk/5yxsuRKjv5oD715r9bU4DkBnpktnTLYSo9YLq46DmXNnh2LVkveil1VkIljgJQesuYSFP
      yjwLMkiRDKGlQo1Jr7ctt56/YplEMxUS1UchRrdVtQAr8+W2F/cB7Mac/kR7IT0ZKmhrn5PH
      feAOAgCoNQs1KyIkbzmtC0i5C+z5ZyFvuDBwjr2wz4uVriT/kJmKmvCuV4pcFbanUnyjACcJ
      c/L+/LJV+YyQjO5wNSOXZeTmvZ4ytxf3gxAFXnhqHvePk0hPxmu9bylr7s9dYOXOCdnzvwfr
      fXPRbJ3uhPgzsGYfK2vRaa2pVi+V+tsV00urEgVkTj+M2MHbYUzcC0b1HGcw91jKLyuGB0pY
      OVciGZMnNMNn6B12kp7vshqI1OBFWzAnAWvqobzn2rFDXvRG3vrEkDdpQ40pmNPB+qy5J70e
      lqB1r4tcJWLDTu9/a/rRvNEszInDnHwgPYmXER1iTNwTeKgZNWCM/dTbzhVNUghr7rewF9xI
      IyKowUU5eai0PdUgt13muRvNqQe9MMdsqn1GSMb/TvwYUCQCrxiZPn57YV/BxV8etPD76cQO
      e3ohAJFSq4rdd04f/m5gMRUAX8DAchy+OfHLQKZc92QrZyh5zalSL5X62xXTS6vmAmL2EozR
      H8GcuBdidCsEtRuC3AwncQL20gu+IZ7SVrsZ+swej730AozxuyE17XXDo5YOu+qM9XUAAARz
      SURBVKtFSwi5KwWt981IvPhZAO6KPSdxAlLLORDUdneZtz4Ka+5pOIkTUDquLOpa0XrfjPiR
      f3LrG/4eqDkDuflsgAiwF57zIloAQOu5AevBwSk3nwkzMggnfhzUnEXshY9C7fwTiOGNgKCA
      6uNwEsdhzTwORg3IbZeAEBVSwy5IjbthLx4ENaYQP/xJqD1vgqj1pPIN/dSL4RbDAwVXqBqT
      v3SH+FonmDUPe/GAu7I4hdL1+pJXQlfanmpwRwFXe6OAQlTzjBAxBCI3uylVzFnEDn8CcvOZ
      EMMDoMYExOiOsha2CWonBK0HVB+FHTsEkupfClp3IPzbK5Mx8tNHvg+l47UQtW44iSFYc08V
      DZdWe98Ce/EgGDVgzT4BakxAbr3QfefMGVjzv4O9eBCNe/7djeQK9QNwOxTxI59yU9NEtrrp
      G5InYU7/GkrbpYEFZ7WmWr1Uzm9XSC+tzkIwMR3VwZxEKl46d8y00vFayC3n1e7agga59bxU
      MjoGY+xuGGN3+8+RGvP3MspAanwFlLZLYE7/GgC8FYx5JCtanxgZhNLxGrdnCXcybPn/TOTW
      8yE1vbJiuWuN1vc2JI7/K5i1AGYveTngi5brvQnx5Ke9HE/JE18MnEPESCqPfP7758SO5k1n
      LUV3Qu14TUnyeHJV2J5qcOcC7i0aTFDtM6J2XQP91DcBuD1RYzzdGw0N3Fr2yma5aS8MfdRd
      PZ+xLx/KhotgTj0EMBtO/HjgNydS1HWV5BlZCUortI1/Dv2lr4NRE078eFaKmCBidAec2GGA
      2TAn7kN1457KqIVeKvW3K6SXVsUFpPX+KSI7/h5y64V5J3bFyBaEt34AWu8NgWOlzQekmpLD
      daT13ZTj4SdubpjNf41QgQ9TlDsXofX/GcKD74WgduQ8LoY3I7Tx7b5FTQXr670RoYG/zB1+
      KijQ+m92Vz/mo5K5lMx7WIErTgxvQvS0f3A/7pNjHoSIIShtlyGy82O+50HQuhDdeUfOZIEA
      IEa3IbLzjkA+lmwEtSvgCydSFFrvjQhv+2Dxe5J1vNL25K8/fU9Jnvu7PBdQSK5lqnlGlLZL
      oPZcn3u+qoIkd7lcPYVSPwtajzu5nuW7J2IYcusFiJ72jxCLrJiXW85BZOcdkKI7A88rEcNQ
      2i71rROKbLsNWu8NOaP6xMigz+2XVVlwV9H3K+MeZpWvRi8B5f12+fQSYYyVHnhbI5i96Eb6
      ODEIciuI2l6TiJ9iOMlhN1MikSBFd1SdnbMYjOpu6CA1QaQoiNJW+cQwc+Doo6CJITDGIIY3
      uiteazRZvnIw92MmZjp6x3W/FB4BMXvJ/RCKPg5BbXezqcrNec83Ju6FMfojAEB48L2QGnaB
      mlOg1iIErQtCgURiq9GeVaGKZ2T5WaXmrJuFU+2oKNLKXcA04tsjhnpR9Pd2EqksqzMQQhtd
      F1sl95TZ7poiaoFIEVfhFWg/s+bcb5EQAkFprzpJYiVUq5fK/e18emktDACHU2sCBiBPniAO
      h5Pm/wNqh/o70zcxnAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='96' name='Partially vaccinated' width='368'>
      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
    </thumbnail>
    <thumbnail height='384' name='Vaccinated over GDP' width='384'>
      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
      //73yLLMyy+/3O9Yb731Fk6nk5deemlA4xg7dix79uyhpKSEMWPGIBwulJWVlUVfXx82m432
      9nYgoGGPHTuW73//++Tm5pKeno7b7Uaj0bB///4Bz1cURe69914eeeQRHn74YYqLi8nPz+fV
      V19l0aJFxMXFkZycHHog09LSmDBhAq+//jqvvPIKSUlJ6HQ6kpKS+P3vf8+6deuwWq1ERUXx
      4osvUlxcjNkc2ANRFIX6Tjuf729mzsRM7pwxgvlTc7j32gKMWjWrv6oneJk+++yz0Bi3bduG
      3W5HkiTKyspC/bFtNhtdXV0cOHAgFFXidrspLy+npaUlFDni8Xj4/PPPcTqdPP/882RnZ+N0
      OikpKQntb/T19dHb28v+/ftxu90A9PT0hPa6hoKrU1EU/JJMj8ODzeVFlpUhMa5TIbh+BAlG
      FgaVC51O18/VI4rikFz8YRhYAAPhyGzZoL/8mwS7JgF02d3UtttRCZARZ8Fq1LJydx2dNjf/
      OXMUsRY9drePVbvr+WBbFT+aNQq99vQvpc8vs2x7DQD3XFtAhFFLt8PDR9tr+GhHDQum56FR
      C6FxenwSte12ep1eYi06kqMMHKnU13XYKanr4gdXjyQr3oIgCOSnRqLXiKzd18faIBIAACAA
      SURBVMjozBgMWjV+v59//vOf/O///m9Is+/o6OCtt97C5/Pxn//5nxQVFWEwGELacXV1NStX
      rmTUqFGhzNIjMRgMRERE8OGHH/KrX/2K7du309XVxerVq3n44YeP6sUgSRJerxetVsv//d//
      8Ytf/IKqqipKS0tP6RpeeumljBkzBlmWEUWRCRMmhI77Tavl3nvvBeCqq67q9/79998f6nEr
      CAILFy7E7/cfVTzwYGMPUWYdl6RHIx5+0M16DZPy4vloZy12tw+rUYvH4wkJsvb2dhRF4fnn
      n8dkMlFTU8P8+fNZv349fX19WK1WrFYrCxYs4Le//S3jxo1jy5YtPPnkkyHXU2dnJ88++yx3
      3HEHJpOJhx9+mPHjx/PXv/6VJ598kn/84x+0tLSEIlHmzJnDyy+/zKRJk/jiiy94/vnnT+ma
      nm0URaGypY9/722grdeNqBLITbRyzdhUoky6IeceuRi4KATAkYii2E86B3p7ethe0UZztxOV
      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
      Sv0vw4YGUfl0weAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Vaccinated per hundred' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy913MkWZbm97l7eGitgAiIgNZIIJEAMrNEd1fP7M5yxvaB3KXZkm/zr/GJ
      ZjTjDGdJ40wPrau7q7pSQauAlgEVEggt3P3yARlRQEKFVnl/1tlWiAh3vx7inHvPOfc7zPX1
      NeF5HhQK5WmW192Q6833Hie3/r8cnB8fYry/FxqNpmznrAQMU9jryTNv0ebmJhRWR9HvZPo6
      gKnxUTCFDuwrRsbzPFQqVa3HQaHUNX6/HxfhOMwqw5OvI89ZuTzQtrTjT+8+4HdvX0Ov15d8
      vkpQCSMrSSKC0ThkvLzgY+ORawy1mqFQKPBP/9e/4G9++AEmk7HsY2w22FoPgEKpdwghWN7Y
      hLnF8exry2EYGYYBy8mg0+lKPlejIEkSPL4geLkCDMPk/Q8AkrEo9KyI7i4XfvzxT/jNd99S
      458nTDweJ3QFQKE8jtfnw/v1HRhtLXkfU+pKIBa+honJYGhoqKTzVIJyz/49Hg+Wt3Zg7ewD
      r1DkfZwkSYj4zjHU4cDQ4AAN/RSBrNYDoFDqGUIIVtxbMNqen/3fhmGYkpxAIhaFy2kr+vhG
      IR6PY2FrH+39owUdl0mlwMRC+Nu309BqNNT4FwkNAVEoT3B56UWiiHlSqSsAc0srDk9OSjpH
      MeQbdikHwWAQf/rLTzA72go6jhCCRMiL33/3Fjqtlhr/EqArAArlETKCgLWdfRgs9rxeX44E
      cBaW5XAVjef9+seMYCFjqqYhJYTg/eIKWoYni7quTqWATEbNV6nQFQCF8gDpdBo/fZgDZ7hf
      9vklhJCyGv/sOVXKh+PhhczK8zWutZhFp8nd6zIMA47jwHEcWPZx08QwDK4TacQTidxjsVgM
      FxcXEEWxomNuNqgDoFBuQQjB0fEx/vDTOzBaEzju8VlmJQw/8NkoEgIOpCwhmOeOqVUIhflc
      8X/b6GdzJ5IkPXms3u7EL3NLSKfTAICVtXX8vLqFjwtLFflMmhW6hqJQcGPMQ6EQ1rZ2ECUc
      9K3tT762XDxmfBmWRVoCRFEEx3EVu06tYBgGFo0SoijkDH92jNm/JUl69L1mWRaS1oR///k9
      dAoeXu8lVCoVtGpr3d1rPUNXAJSvmnQ6je2dHfzhzz/hL0sbkLRmaA2me6/LzvbLZfzzCd0Q
      uQo+n7cs16tHxkeG4Ts5giRJEEUxZ/Cz7/Fz7zXLcVBaWpHRWqDWG0EYFut7R7lVAeV56AqA
      8lUiiiIWV1ZxGriCUm+CyuqEqgyJ1HzId4aajEZgs+WXgG5EDAYjVLcWN5IkFVw+m30veVML
      GJaBcBVCIBiEo7W13MNtSqgDoHx1+Px+fFpZh9Jsh8nRUdVrFxKeUMjlEAShLCGgeoWXcUgn
      k5ArlQCKd7bc54oglVaPrZ098DIZFAoFtLRM9EnoTmBKUUSjUSSTSVit1loPpSDS6TT+v79+
      gMbmyNswVCPm/xCZTBoRzwF+9923Zbt+vZFMJrG8uobz4BU6h8YLV5h76JzxOBKxCLxHe3g1
      PoKhwcG61VQqJ099Tx/73tEVAKUoJEmCWq2u9TAKQpIkvF9Ygspir9mskBCS97VlMh7haKzC
      I6otSqUSr2em4Tk9xdb5JUz20kM3SrUaCpUK8cAlWts74d7egYxlMDgwAK1We+e1hBDEYjFI
      knRHe6mRVg3ZvIkkSQgGg4jGYsDn75nNZoNKpcol1r+EOgDKkxBCsLe/j0t/ACyAocEBmIzG
      hptRSZKEhZVVZBRa8E+UdtYbcrUWsVis7qWhS6W9rQ3hSASBSBgaXenfLUmSoFIqwHEc2jtd
      yGQyWN3YBAcCTsaB53kQSUI4GoNCqbwpSBVFaDVqaDQaWK3We86i3sga/aurKySTSfj9AQgA
      5AoFGDAQRRGelVUwILCYzHC5Ou9N2mgIiPIkhBCErq4wt7QKRqWBkmTw/ds3tR5WQYiiiLnl
      VUTBg1co7z3/3NK5YrX+eSCKAoLHB3g5Mgiz+flNaY1MPB7HH+eW4ezqLflcmXQaQvAck5OT
      dx7PGk0hkwHDspDLf5WeFgUBiWQSmXQa4esrsAwwNjJSl45AkiScX1zg8OgIMrkCPC+HwWCA
      8hFbHotF4ff6wDEEPd3dsFpvymWpA6DkhSRJ8Hq9sFqtDbcFf25xGdfgwcvv76zNx7hXwgkU
      EmKQJAnek0P0O+3o7uoq6zjqCUII/ukPf0TX8HhZzuU72MY3r2eKTqJLkoTTk2O0WC2w2WzQ
      1IHoHCEEiUQCq+vrkCvVsNkLC2dKkoSD3R28fT0LnudpCIiSHyzLorVBS+vCsRhkxvvllLXY
      MVqMAWFZFrxS/WxHrUaHYRiMdndi/2gfto6uJ+UgniMcCkDMpEvaSMeyLNo7XQhfX2PNvYlM
      Og1eJoPVYkZPT09J4ysGQgiisRjcm1twtHXkKp8KgWVZKJTK3E5r6gAoTQ0hBMl0BtrPhrcY
      o18OR1GI4f8yUZxJp6EQEujpHit5HPXO4EA/Wuw2fFpehcrmhFqbf1McQggiVyHEg150tTnQ
      8f13JRtphmFgMBphMBpz17i+usLe/j76+/pKOnehxONxbGxuwdHWXlJpMMtxuLq6gl6vpw6A
      0tykP8d6gfqb8QuZDC6P9sBxHIRUEgwhUPAyyGQyxJJJMDI5JACCRKAUktUbdI0xGo34/Xff
      YHV9A/7LCMwtzryO85950KJXYerNbMX2TjAMA6PJhMO93ao6gGQyifXNLTjbO0p2as62dpx7
      L7F3eEQdAKV5kSQJC8srkBuqu1ch39l+yO/FWI8LTqfzwTI9URSRSCSQSCSgVN5PXjczHMdh
      8sU4fv7ll2dfK2TS8B7to7vdga4q5UgyglCV6wA3E5f1DTdanW1lCzvZ7Dfd7agWEKUpIYRg
      //AQ1wILXi6vyuy/ULVOo8WKo+NjcBz34HEcx0Gr1cJms31V/YFv02K3IxwKPPka3+kxXr0Y
      rZrxBwCNVotQKFSVaxFCkEylKrKqoSsASlMSDoexdXwOna06iet8DH8yHsd10I9MIgZWEmHS
      adHXW3rJYzPjdDiwNbcEvcly77l4NILg6THsZkPV96XYbHYcn5zAZLovHFgRKlR8RB0ApSlZ
      39yG2lRfMhXnu258OzMFnU4PRQHNz79mVCoVWPF+uEUURUQvT/G7797WRCuJl8shgoHf76+4
      HArDMJWy/zQERGk+EokEfJE4WI6rWNOW2+Qz+yeEQK1UwGq1UeNfACzLQsHdf3/j0TDaHPaa
      CuXZW1qxd3iEQODpEFWpMAwDq8WCeDz/FqH5Qh0ApelIJBJg6kzu4fLkEBNjo7UeRkNiNRmR
      utX+EQDUWj0uff4ajegGhmHgbO/AwYkH795/wN7eHjweD/x+P6LR6LNdzQqhu6sLl+dnZTtf
      lvr6lVAoZUAmk4GQ8v34ykEqkcDlpRd2m63WQ2k42pxOzO0cwt7WmXuM4zjE0yLS6fQdOYdq
      w7IsHM42SJKERDyOYDiKTCCITDqNTCYDBc/DYjaho6OjpHHyPA+NSlm2DnFZqAOgNB0ymQyk
      jLOvp8i36qejfwiXZyewX16ipaWlwqNqLgwGA9Kx6L3HObkC0UgEZsv9BHG1YVkWGq0Wmi90
      gyRJQiwaxcf5BbAMA5NBj46OjqL0hVKpdNlDXtQBUJoOjuPKtgIol/aLJIpgM6nqVY00ETKZ
      DCr+frSaEFL3zXJYloVOr4dOr78p50wksObegk6tREdHR97VS8FgELIHtKxKHl/Zz0ih1Jir
      qyvwivoSOPQe7+Ob6amahisaFYZhoFepIIli7jFJEiGTMtAbDDUcWWEwDAOVWo0OlwsqnQHu
      nV3s7e8/W6QgCAI2t3fQ6sxvR3QhUAdAaToIIWCEdE2kH26TiEVxdrSP48012PXar243bzlp
      bbHjOvhr0tfnOcb4yFDN1TmLRaFUor2jEylRwobb/eh3lRCC5ZVVtHV0VuReqRw0pSkJBoP4
      eXkDhhI3ghX7owv5vdCIKfT2dEOn1T6625eSH4lkAv/+yye09w0hGr6GUohjdGSk1sMqC/F4
      HOFgAKMjw3cmCbF4HG63GxqDEXp9ZVY6NAdAaUr0ej0yifLXTT8HIQSXJ4fosVvQ2zNMjX6Z
      UMgVQCYFz84GWox6DI82T0mtWq2GXC7H3OIS5DIOapUKiWQKGVFCe2dnRfMc1AFQmpJUKgWu
      xKRZocb7OhREwn+BV+OjMJvN1PiXkYXFRXQ4WtDbP1D3id9ikMlk6O7tgyRJEEURBo6rSr8B
      6gAoTcn+wSHUhuIrbgox3qIo4vJwD92tVgz89ntq+CuAQi6H3dnWlMb/NizLVrXRDE0CU5oO
      QRBwfOmHXFlcbqtQA36xv4PfzrzE4MAANf4VYmhoCPu7O7UeRtNBHQClqZAkCWsbbvD6wkMw
      hco5A4Dv/BS9ba2ghRSVhed5qFUqRKP3N4RRioc6AErTQAhBMBjEcSAMRZ4GOWv0vzT86VQq
      JyR3HQrAd+ZBJn1TWiqKIk72d3Dl98HAShjor25rwGJohpXJ8NAQjvb3az2MpoLmAChNASEE
      mUwGc6sb0Fsdj77uKUOYTCQQuQoiE4vAadIjEo0iLRG02W1QGSzwei8QjMWhVsgxM9iLjc1N
      9L14UYnbKZl0Og2FQpGrL89kMpAV0UQcQNn1Z4pFLpdDwcuQTCbpnooyQfcBUGqG3++HTqcr
      WR45Oytf3XDDn2Yg/8I45DP79XqOYVawsFkssNvtDS3ZnEqlkEqloNFowHEcJElCOp3OGc3b
      70fWQWQf+7IhPXATVmNZ9t5ztdhod3FxgXAsjraOjqpfuxmhKwBKTRAEAQsra9BrNXgzO1Py
      +Xb29uBNiFBqbkS28g15iKKI8/1tvBoeaAqRNoZhIAgCtFotUqnUndxE9rlkMgmGYSCTyaBU
      KpFOp5FOpwEAGo0mV4ooCMJnZVUCnufBMAxisVjuXGq1uupOQK/X4/j0jDqAMkEdAKXq+Hw+
      /J9//CsS6Qz+yw+lxc9FUcS6exNnkSTUemNBx0bD10j6L/D7NzNNE1LIztZlMhni8fg9RxiP
      x3MCZNFoFAqFAslkEgaDAZlMBolEAjzPIxaLQaPRQC6XIxaLQSaTgWVZaLVaMAyDSCQCURSr
      WrII3ISBpAc6hFGKgzoAyh0IIVh3u9Fit8NWoVZ3Rycn6HPaMDU2UrQ6JiEEJx4PVrf3ITdY
      CjL+hEjwnZ/BImfx9rtvmiJBmiWdTkMQBESjUQiCAPGOgJr0WSn111BOdrYfjUbvhIMUCgV4
      nr/T1ESSJMTjcbAse+e81UQmk0EQqAMoF9QBUO4Qj8fx4+oe2ozn+J/+7m/Kfn7P6Rmuo3H8
      /vtviza8oiji09IKAkkButb2go7NZNLw7m1hcmQIDsfjyeJG5Hb4h2EYyOXyOw1TWJaFIAgg
      hECSJBBCwLIsOI7L6dNLkgRBEMAwzL3wTvZccrm8Iu0J86bGIn/NBC0DpdxBrVbDrpGjxXhf
      pzxbFkkIQejqCj/98g6Xl5d5n5sQgp8W1+A+DyGdzhQ1PkII5pZXEGUU0BnNBR+fSiTQ6bA3
      nfEHbt6bbKgGuKmdB5Az8gCg1WqRTCZzRj472w+Hw4hEIhAE4c7rAeSE7HieRzKZRCwWezBZ
      XK17pJQPugKg3IFhGLydGIHugY5FyWQSXq8PFz4fNjw+GNUKTBegx+7z+RCWOGgVMshkhZcV
      EkKwsuHGtchBqW7cKp1KwTAMlEplzkgSQnJJ4OwqQJIkKJVKZDKZXIUQz/O557OGPVv1A+BO
      RZROp7tzzWobZEmSwNOeCmWDOgDKPTpvVVhk6+t5nsfSyioWPEEo9SZIooj/9P0bqApInm7s
      7IPl5bArZAXVlRNCEAqF4N7ZRYxR5Cp9iqd5Yv63ecgY334sO+NPp9NgWRYqleqOs3jsPE89
      V20EQShrs/WvHeoAKE8SjUbxv/8//46/ffMKL8ZGsXH2F7Asgw6b8U6J4c8f53EVjmByeADt
      bXc7F4miiPdzCzg9O8Ps0AAG89g5SwhBOp3G4dERDk4vkCIsDDY7lGztNyQ1KtkWilnnW2tj
      XgxyuRxEqs9x386bfBkeq9f3mjoAypOo1Wq86O+CyWiASqXC7EAXLoMhfDc7nXtNMpXCSUxE
      itNhaXPnQQegVirwX/7z3z9abkkIwfn5BTxnZ4gmkoglU7gOR2Dr6ILa3gZ1Re+S0ijc5Cz4
      O8nteuD2Sjn7d3bzXSQSgVarrUsnQB0AJQchBIlEAheXXvR0dwG4SQC+fjWVe8346DDGvkgA
      sgwDiAJEIkGnuR+bl8vleDnxuGRCVsPnw8YOzC0OyFRGGAAYyt8CldIEWMwWhIJBtLSW1u2t
      nGR3o99OvN92UNmqq9tluF+uFrKJ+exrqgF1AJQcyWQS/9v/8U8Y6O3OOYCH+HJ5K5fL8f1w
      FzznF5gcK7xNXyAQwP/9//4rlEYrzo/2b8r8HqswYRjglgMiAJjbMX3m1//4/NI7400m4tC3
      WAoeI6V+CEfCaGmr753AoigimUxCo9HkdlULggDuc6MXSZKgUCiQSCSgVCpzexvS6TRkMlnO
      kVQa6gAoOVQqFf7X//E/F6WD097mvBf6yZeDgwP8h9//AAD3kpKPJSAf+u98kpfX19dIpdJF
      jZNSe0RRxNV1GL2DpRYCVA+O43L7J6LRKHQ6HSKRCJRK5Z2d25lMBizL3gklVRrqACh3yMoE
      VAtRFCGKYm4jUqWRyWQ4P7+oyrUo5SeVSkFZZKOfavDQBrostx/nOA7xeDxn6LPSG4QQJJPJ
      qowVoBvBKDVmd3cXLperatcjhODg4CAnakZpLEKhEEyW+gzhpdNpJBIJZDKZOz0mCCFIpVKI
      xWK5Wb9SqUQymQTP87nNlel0GqlUqqpjpg6AUlOurq6q3k2rxenE5vY29vf367Iyg/I4Op0O
      kfB1rYdxD47jctLmPM/f2Weh0+nA83xOnjvrGBQKRW7FoNPpIJPJoFKpoFZXr+aNOgBKzYhG
      o5DL5VWXFOBlPEbHX4BTKDA3P1dbXRtKQWi1WsTrcPWWrey5LbJ3Wzrlyz4KyWTy3ka87O7r
      ak5KaA6AUjN2d3fR2dlZ/Qt//i22tLTCbDZjw+2GxWRCd3d39cdCKQiWZaH5bDgbVcWVYZg7
      xr+W0BUApSYcHh5CoVBUvdXglz86npdj7MUEGJ7Hp0+fkEgkqjoeSuGIktSwxh9A1Wf5T0FX
      AJSqQQhBPB7H7u4uDAYDnM762enV2uqA2WzButsNq9mMrq6uWg+J8gWEEAQCAQg16kXQjNAV
      AKUqCIKAtbU17OzswOl0Ft0IppLI5TerAcJxmJubo6uBOiKTyeDDx4+48PsxNDpW6+E0DXQF
      QKk4giBgfX0dTqezrvRbHsPhcMJitmBtww271VLVMlXKw2xtb6O7f6Bq+0W+FqgDoFScw8ND
      mM3moo3/7faD+Wyyeeq5bPPz55ArFBh78QIX52eYm5/H2Oho0/QNbkT0Oh2i4TB1AGWGOgBK
      xYlGozAaC2vYnuXg4AAnp2dQazQ3D9yI/3z+71t/MNm/b8N8PuDXvyVJgivP+D7DMHA422C2
      WLG6vo5Wux0dHfWtQdOsdHR0YH5hHmartSFWkY0CE4/HSbU34lC+HgRBwKdPnzAyUrhIHABs
      bm5CazDBUqEG9flCCMH52RlCAT/GRkeL0kuilEYymcTK2hpGX0zUeihNA00CUyrKwcEB2tsL
      a9z+JfVQMMcwDJxtbegbGMTK2ho8Hk+th/TVoVQq0eZw4PTkpNZDaRqoA6BUlEAgcK+PbGF8
      GcapLQqlEmMvJpASRCwuLuadU6CUB6fTiWj4uqqCac0MdQCUinF5eQmTyVTipp36Mf5ZGIZB
      W3s7uvsHsLSygtPT01oP6auBYRiMjY5if3en1kNpCqgDoFQMv99fdPL3V5h69AEAbkIS4xOT
      SKQzWFxcRCaTqfWQvgp4nodEN4OVBVoFRKkYmUymdKmHOtnxL0kSzk49uc5N9+A4/Mt//+94
      ++ZNXe1wblbqtTF8o0EdAKViZDIZyGSlfcXqJQOQTqdxenyE0bHHdqGa0NHmxNXVFVZWljE6
      OlZ1naOvCZZlIIoifY9LhDoASkUph2hXPSwCZBwHlVoNyzPNSCwWC2KxGBYWF9Df1wejsf4k
      LxodhmHQ19uLg7099A0M1Ho4DQ3NAVAqwsnJCcxmc1nORepgDcDJZGDznG1qNBq8evUKZ+fn
      2Nraqhvlx2bCbDaDYwj29/awu7ODg/09nJ2e0ve6QKgDoJQdj8eDVCoFa403b5UThmGQLqCZ
      PMMwGB4ehsVqwcdPH6mwXAUYHRlFi8UEV5sTbS0t4FlgfWWZluYWAA0BUcrK2dkZEokE7HZ7
      +U5aJ5O6Yqp8LBYLjEYjVlZWYLNa0dFRgwY4TQrDMLDbW3J/m0wmtDnbsLq2CpPVDkIIzBZL
      rvE65T50BUApG+fn54hGo7DZbLUeSkXINwT0JRzH4eXLlyAAFhcX74jbUcoLz/N4OfkSHJEg
      JBPY3nTXekh1DXUAlJIhhGBjYwORSAR2u72s3ZrqqfOTSqWCJElFH9/R0YGh4SHMzc3B7/eX
      cWSU2zAMg87OTgwMDIBjgFQqVesh1S3UAVBK5vT0FH6/Hy0tLRUy2PURA2I5ruRYvlKpxOzr
      WQSDAaytrdGkZYUZ6B/Awd5urYdRt1AHQCmJVCqF9fX1ijZ3rxcTKeNkZdOg6R8YQKerE+8/
      vEcsFi3LOSn30el0EDMZZGhi+EGoA6CUhEwmQ0tLC/R6fUXOX08zZJVaVVYRMp1Ohzdv3mB3
      bw/7+/t1da/NRJfLhZWlRUSj0ZJCeE9BSGXOW2loPwBKSRwcHIBl2TJo/vyKKIo4Pz+Hx3MK
      QZIwPjFZF01Arq6uEI9co7u7u+znvry4wMmJB5OTk7RqpUwQQnB4eIhQKAhXVxcuLy9xfX0N
      QRChUKnR6nTCaDSCZdmiQ5fJZBI7W5sQhQw4GY/+waGG6hxHHQClaERRxPz8PAYHB8tyPkmS
      sLu7h0AoBJu9BQ6nEyxbP4vUWDSK89MTjI6OVuT8mUwGy0tL6OjoRGtra0Wu8bUQiUTgdrvR
      3tH+oDZTMpnE6ekpfD4fRImA5Tj0DwxCpVbndf5EIoGdrU0oeBmGh4ehVCqRSiaxvrEBUQL6
      BgcbomkQdQCUovF6vQiFQmUxVqlUCvOLi+js6obFUp8byBKJOPZ3tjE1NVXR6xweHiISiWB0
      ZJRq3RSIIAjY3d1BKp3G6Oho3lpUoihidXUNDCdDb3//oyuCaDSC3e1taNUqDA0NPbgyjcfj
      cLvdAMuhr38AfB2sXh+DOgBKUWSX1wzDwGQqXe/mr7/8gslXM3U14/+SdDqNzfVVzMzMVPxa
      0WgUbrcbA/0DZQ2vNSuEEAQCAezt76Gvr+9ZzabHCIfD2N7ZxeDIaO67SAhBNBrF3vY2vJfn
      +Id/+Ie8wnTRaBTuzU3wCiV6evtKFkasBPX7a6PUNYlEAqFQqCzGPxQKQWcw1bXxB24S3hxX
      nR+xVqvF9PQ0zs7PsLW9VbHkZTOQTqextrYKv9+PmZmZoo0/AOj1egwNDmBteQmiKOL6+hpL
      C/PwnZ9iZnoKbW1teRtyrVaLmelp9Lg6sbW+iv3d3brbBFh/LonSEFxfX0Or1ZblXIlEoiES
      nyzLVlVnJqsnFAgEMD8/j9HRUajzjFF/DRBCbooFTj0YHhqCrkyVaFqtFi8nXmBhaREGvR5v
      ZmdyRl+r0eD6+rqgVZler8fMzAxCoRA2Vpeh1RvQ6eqqi/AedQCUori4uIDL5SrLuSwWC869
      vrKcq9Kka9D1K6sntLq6CqvFivb29rraIV0LEokE3G43jEYjZmdny35+pUqFb96+vfe4zW5H
      KBQqKixnMpnwenYWfr8fa8uLMJmtaOvoqKkjqO81N6XuSCQSWF5eBs/zZfviyuVyJOLxspyr
      0tTK7HIch8nJSRAQrKwsf7XtJyVJwuHhIdybbgyPDKOnt6eq19dqtbgKhUo6h9Vqxds3b2DS
      a7G6tAjPyUnNQnzUAVDyRhAEuN1utLW1oaOjo2znZRimYQyaUqWq6Yatjo4O9PX3Y2VlGT5f
      Y6yaykU0GsX8/DxkvAxTU1OoRfGKQqGAVKbPv6W1Fd+8fQONUo6VxQWcn1W/nwF1AJS88Xg8
      MJlMFYnXy+X1nwMAbhrDlHM3cDGo1Wq8nJpC6CoEt9tdd4nFciNJEnZ2drC3v4eJyQm0t7fX
      bCwsy5ZdXK6trQ3fvH0DnmWwsrgA7+VF1RwBdQCUvCCEwOfzla3L15fIqlRdUyocy9XcAQA3
      q6b+/n60OlqxuLSIcDhc6yFVhKurEObn52E0GTExMVEXO8IrRWdnJ968ngWEDFaXFuHzeit+
      TeoAKHmRSqUqWqaZTjeGZK/i847PesFoNGJychLHx8c4OGgePSFBELC+vo7z83NMvZqqqx4T
      lUzAMwyDru5uzM5MQ0glsLK4gEAFpcOpA6DkRSqVqmipZqPUtOj0uppUAj0Fx3EYHRuFSq3G
      4uJiXaxQioUQgsvLSywsLqCjswPDIyN1US55G7YKFVgsy6K3txcz06+QiIaxsrhQkVVeY6y7
      KTXn+voaDMMgFApVZAbEMAxEUay7H/uXyOUKBK5KqwKpFC0tLTAajdhY34DD4YDD4aj1kAoi
      nU5jfWMdOp2uIqWd5aKtrQ0nJydlLYR4DI7jMDAwgEwmg+2dHZwcHaKnr79sCXDqACh5cXl5
      if2DQ9gL1f15ICJBHnhQpdU1RG07x9VHDuAxFAoFJl9O4vDwEGtrqxgaGq5LCYLbEELg8Xjg
      9V5iZHS0JtU9hdDe0YHVlRUYjUbodLqqXJPneYyOjCCZSGBzawuEYdHT21eyzlB9fzModQEh
      BH6/Hxkhg6HhkYYw1JVCxnEQBKHWw3gShmHQ3d2NcDiM5eUlvHw5VbcyGzfCaTlzpxIAACAA
      SURBVBuwt7Tg1fR0rYeTFwzDYHRsDIuLi5icnKzqqlWpUmFycvJGs2hzA2qtHh0uV9FjqM9v
      BaXuuLi4wNTkJLyXF7UeSk2R8TyYOjWmX6LX60EI6tJhJZNJnJ2dYXtnG2Pj41UJp5QTjuPg
      dDpxdHRUk+vr9XpMT0/DbjXDvbqMYMCPWCxW8Hka45tMqTnDw8MYHh6GlMng6iqEaCRS6yHV
      BI7jkE41TntBGS/D+vpaXW20u7q6wt7eHmx2GyYnJxtCN/8hlEplVbWhHsJqtWJ2dhZ2ixne
      Mw821lYL6ltN5aApBZFKpfDTzz+DEGBsYvKrDAd9ePdX/Ob772s9jLwQRRHhcBh7e3swGozo
      7++v6Xi8Xm8u1l+vYalCODo6AsMwdbOCicfj2NraAsPJbiSon6nca/xPgFJVFAoFfvjd7zA6
      MgL/VyZFkIVhGudnw3EcTCYTpqenEY6Ea7oSOD8/RygUxOjYWFMYfwBwuVwQMpm6keVQq9V4
      +fIlul2d2HKv43B//0mdoeb4FChVheM4OBytiMciX6VOvVKlasj7Hhsbw+rqCjY2NrCwsIDV
      tdWqbBwjhODg4ACiKGJgcLDpVo3tHR04OTmp9TDuYDAYMDM9DZvFhLXlRZx6PA9+1tQBUIqC
      YRiwDTQTLidcBfRgqoFcLsfky5dwOB0YGh6C2WzGwsICgsFgxRLFhBBsbW1CoVSgvaM5Zay3
      t7fR29tb62E8iM1mw+vZWajkMqwuLd5btdMyUErRpDPpplnKF0JWEK4Rc2cMw+S07BUKBViW
      hdfnxe7uLoxGIzo7O6FUKstyLUIINtwbsFmtsLe0lOWc9UY8HockSTAYDLUeyqMwDIP29nY4
      HA4cHh5ieXEe3T190BsM1AFQCudmVreFcPjrrARSKJQNuQL4EpZl0draitbWVgiCgKvQFTY2
      1sHzcoyPj5d07qx0eFd3V9U2S9UCr9dbVzpFT8FxHHp7e9HZ2Ynt7W14jo9oCIhSOMlkEh8+
      fISpQsqg9Y5Or6t5+V+5kclksNqsmHz5EuFIaZoz6XQay8vL6O3rbWrjD9w0kddoNLUeRkHw
      PI/R0VGMj43SFQClcJRKJSwWM+TyxqzfLhWe5xG9vqr1MCoGV2RYjxCC6+tr7O/vYXRstGyh
      pHpGyGQazgFkUSgU1AFQCufi4gKCKKG1wcTGyoWMkxW02aaRuLi4gNPZltdrU6kUvF4v/H4/
      BEGAKAowmUx4MTFR9/pD5SKeSDR0Huzr+JQoZaWlpQVOpxNEkoAG/vIXCyeTQRCaswvXxfkF
      hoeH7z0uSRKCwSAuLy+RSMSRyQhQa9SwWCwYHhmGXC5vaENYDISQikqkVwPqACgFw7IsxsdG
      sbK2Dld3dZty1wPNbOxaWluwsrqCwYFBBAJ+BIMhECJBEEVEwmF89/33UCqVdS/bXQ0ymUzD
      r3Qae/SUmqFSqeBosSMYCMBssdR6OFXlpol9cyWBszidThiNRhwdHsHeYkdHZydkMhnS6TRW
      VlYaNt5dCVKpVMM7gOacxlCqgt1ux3UTJ0Mfg2EYpNP1I65WbtRqNYZHhmGxWMDzPBiGudnA
      1STtJsuFIAgNX+VEHQClaBQKBaQ6lBquBtQUUtIVbpNaDagDoBQNwzBQKOQQxeZMiD6FUqls
      mgbs+dCMEg6lkkgkGj4XQh0ApSTkcnldac1XC47jmm4zGKUwaA6A8tWj+EodAMtxSNVxb2BK
      5REEgToAytcNz8tBSONJI5eKXK5Asgn0gPKFYRiAhoHuIEkSzQFQvm4i0QiUysZTxSwVnU73
      1a18qPm/i0QIXQFQvm6SySTkcnmth1F15HJ508pBPApdAdyDrgAoXy2EkKaVRHgOmax59YAe
      IrcXgJJDEARaBUR5HkJIU5YMxmIxyL8CxceHkPGypt4M9hDU/N+lGXpCNHYAqwFIJBLY2t6G
      XqdDd3d308yiCCHYPziAzWbPy7k1y31n4Xl5093Ts3xt9/sMzbD/ha4AKsyn+XkoNFpEorGm
      WgWIoohwJApFniuA7CqoWd4DjuMgiF/HLmhCCMLh8I36KyVHM7hD6gAqzGB/P+QM4PN5sbq6
      mveyMRAIwuv1Vnh0xePz+aDTV6cP6m3nUcq/csIwDNKpr2MjmCAIWFpcxOTLl7UeSt2QiMeh
      0+trPYySoSGgCtPS0gK73Q6dTgelUonLy0s4nU4cHR/DYjZDp9M9mEjy+33wB4Kw2+01GPXz
      nHg8aOvsuvNY1siKooiD/T0AgNFkgiRKICBoaWkFwzAghNQkfFLuUJX0lcyICSHQarUNX/JY
      LpLJJDbcbkxMTNR6KCVDP9EqwDBMzpArlTcNxbe2tiGX8+hob8fg4OC9Y3p6etDa2lrtoeaF
      KIoQRAmb7g0IggCFXAGlSolQMIhMOg0ZL0NHWxs0Wu1N6IAQRKNRnHk8GHsxAblcfs8JZI1z
      rePqhTgnhVKJdDr9VZbBfq2k02msrq5iYmKi4SuAAOoAqo5cLodcLsf/8J/+DsDjBo/neRgM
      1QmxFEo6nYbf74fNaoGrs/+mWUgkgq7OjnvG0Gg03jluaWkZI+MvwPP8gzPyxxxDNcnXGQ2N
      jGJxaRk93V2w2WwlXy+fa1JqhyiKWF9fx/j4eMPX/2ehOYAa8VxdtSiK+DQ3h9PT0yqOKj+S
      ySROjo/gcrmgVKmg1WrhcDienQnL5XL09/fhYH8PiUSi7rV0nnM+SqUS/QODODs7K/i8jZQU
      j8fjMNxy5F8jkiRhc3MTg4ODUCgUtR5O2aArgDolGAwilRFwdOJBW1t+TbqrhdfrxdTUFJRF
      7AEwmUxIJpPY3XJDJpMhI4gYn5is25nvcwY6EonAbDY/GToqxMjXKj/yFGenp+h0ue49/tR9
      1ds9lAIhBOvr6+jo6IBK1VyyJ9QB1ClWqxXpdLouw0DpdBpdXV1FH+9wOOBwOAAAx0dHuLy4
      QOvnv7M0wswYAAIBP/p6ugHcNd6ljL+enAAhBFfX1xjRags+rl7uoRSyxr+1tbUuf4ulQh1A
      ncIwTN3N/IGbH0QikSjbMrjT5cK79x/uOICnjGehhiWTyUASxbz3KxRKKpGA9pZxbBTHlQ+E
      EFxfX0On0xVlzJvBCezv78NqtcJqtdZ6KGWBEIKTkxOkUikkEgnqACiFEYvFyp4AU6uU2Fhf
      x9DQENhHKiuurkI4Pz0FkST0Dw3nPYb3v/wMjUaHvoGBZ15JHvzPuw+R3HPZvyVJrIiRq7Xx
      JITg8PAQ8VgMo6OjJZ0HaMyQkM/ngyAIaGlpqfVQysb+3h4UCgVMRiPa2trAxONx0mxxrUaD
      EAJRFHN11rX+8T+GJElYWFyEy+Uqewnc+vo6BJFgaGTk3nOEECx8+oiJiReQy+Vwb26ht68f
      Mp7H9qYbV6EQyGeTzIABwzJgGBYMw0DIZGA2m0Akcm/rJgPckzfI/fX58S9f8+Xn0tLSArPZ
      XPyNP0M5vwdZYywIAjKZTO6fKIpgWTZXmMAwDGKxGKLRKEYe+Dy+PF++1ON3+jEymQwWFxcx
      MzNT66GUlbm5OUxOTuYmUHQFUAfE43H8+S8/4fc//A4KhQJ//PFHzM7MQKfT1XpoOQgh8Hg8
      0Ov1Fal/Hh0dxfv375HJZO7N7mOxGAwGPTQaDQBgaHAAm1tbsNjsYBng+++/uzdWoLEMzmOU
      WiIqSRK2t7cRCAQAACqVCizLAoSA53lodTooFApkMhkIgpD7J0kSent7y3YfwOMOo94+J0II
      VldXMT4+XuuhlB21Wo1UMkkdQC2RJAmxWAxarTY323J2dmJlbQ1Tk5PQajR1tbmIEIJIJAK/
      34+u7u6KXefFixdYWV6CxWZDR6crZxhisShUt2L4crkcQ4ODWFxcxMsH5AnqzaCUC0IIUqkU
      dnZ2IIkiLFYr4vE42tvbczkZQgg4jgPDMDc7VtfX0dvXh+Hh4RqP/nHqbcXr8Xhgs9mKqnKr
      Z5LJJERRhPrzRAoADQFVk6whPTg8hNfnx+9+8z14nocgCJhfWIQ/EMDf/PC7uvriZROB2zs7
      6OnpuZk9VpijoyNE40n09fcDAMLhMLznpyXFopuBaDSK7e1tDA8Pg2EYeL1eaLVanJ+d4Toc
      RiadBsOyYBkGPM9DqVJhZGSkYnXrldBXqjWEEHz8+BGzs7O1HkpZ319RFLGyvIwXExN3Vth0
      BVBlPKencHV2gmGYXChFJpPh9ezMg+GPWhKLxfDh40doNJqqGX8A6OzsxMbGBv7ypx/R1t6B
      UNCP6VevqnLteiQUCsFzcgICYHJyMve9cX2uzbdYLPB6vYhGo+jp6QFQH8a0UOphJSBJEkSh
      tiqvlagku766gkajuWdf6AqA8iipVAqnp6eIRqPQ6fUwGo1VLXNcXl6GTqdDV1dX1ZxPPRGP
      x7G5uQmDwYDW1lZoNJpHDeT29jasVuu9hHQlDWqlvgvFSoGU414XFxfR09MDfZWVPiv5u9rZ
      2UHA70f3LX2x7HtFVwCUR1EoFOjp6YEoitjc2gLP81Cr1VW7vigIaG9v/+qM/+bmJhKJBDiO
      w9jYWF4hHJ7nH9Trr4dZdaEUawxLvdef/vIXdLpcVTX+lZ5QSZIEv8+Hb7799t51GYahWkCU
      52FZFv19ffB4PFW97sDgIBbm55tqc9VDiKKIjY2N3Pt7FQphamoKExMTecfvXS4XTs/OEI1G
      7z1XifevXj+TUsalUCrR0dFRxtE8TrV0oFiWBcOyEB4IaxFCqAOgPA/DMJDJZLCYzbi+vq7a
      dbVaLVpaW+u6MU6pXF1dYWFhAe3t7QCA+bk5aAqUXQBufug2mw1XV1cPPl+upjqNIGBXjjFW
      4r5r9f5ZrVYcHBw8+BwNAVHygmVZdHV14Q9/+AOMRiP6+vtzuv6VhGGYpm28QgjB5uYmXr9+
      DZZlYTAYSpqB6rRanBaoTNrMPBYSeug7yzAM5HL5s4UYz33f871eNcgqmOq0WnR0dj74GuoA
      KHnD8zysViuOj4/R2toKs8VyL2EXDAYRjUbh9/thMhrR1d1dUlzWaDTi7OwsJx7XTIRCIVgs
      lrLlOLQ6HbRaLQ4PDiq6X4OQmx7BqVQKKpUK0WgUR0dHAG42GrW3t1d0d3Qh5Gt8CSFwOBw4
      PT0tSeiwnlZHO9vbcDqdMJlMj76GOgBKQUxOTiKVSiEjCLi8vAQIyUnnJJNJBPx+tLa2Ymho
      CLFoFKsrK+BkMgwPD4Nl2TuyA/mws72Nl1NTlbuhGuDz+bC1tQWNWl32vrJtbW2Ym5tDIBDA
      0PBwbvd0OYhGo3C73SCEQKPRgud5XF5ewmg0YXb2NQAgkUjg1OPB9vY25HI52traYLfb6zoR
      nUql8OHDB7AMA4Zl0d3dXVeGvFjiicSzRRu0DJRSENfX1/j5559hsVpvDDlwo5VDCFiOg8vl
      ws7ODq6vr9HlckFvMCAej2NrcxPyzwnNTCaDmZmZvCQlIpEIzs7O0N/f/2wTnXqEEIKDg4M7
      pay7u7vQ6XTQ6/VQKpUVqXLKZDJwu93Q6/UlzWiznJ+fw+v1YWRkJG8pkJsyYg8EQcDQ0FDJ
      Yygn2c8l4A9AFAVMvZoGz/M4Pj6GTMbB6XTWeoglEwwGEQwG0f95Q+VD0BUAJW/S6TR2d3cx
      PTNzR6pCFEVsrK8jIwgIBgJwOp3o7+/HyckJDg4PodfrMfnyJZRKJS7Oz3F0fIx4PJ6X1pFO
      p4Moipj79AlKlQovXryo5C2Wne2tLcTicbx79w6jo6NQq9UIBoNQq9UVLanleR48z2NjfR2E
      EHSXGBLa39vH22++KeiYmzLiXmxvbyMYDN4LC2WNcDAQgNFkQm9vb8FS3xcXF/BeXkIQBBDc
      5KpYhgXLsiAgUKvV6OzouJNYJ4Rga2sLKpUar6an7zze2dmJhYV5WK1WKBSKhl4JmEwm7Gxv
      o6+v79H3la4AKHkjCAJ+/PHHewqagiBgeHj4Qd34bLx4b3cX8UQCNpsN3d3dBWkdEUIgSRLc
      bjdcLlddieQ9xeLiIrq6unIdw7a3t7G/t4fhkRF0dHRUvKn4wsJC2frX/vLLL3jz5m1Rx0qS
      hMXFBUxNTYHjOIRCIWQyGRwcHKCz0wWTyYRoNILDg0OMjY89K4UiCAJWV1chCAIcrQ7YbDbw
      D3yfJElCNBrFyfExJElEX38/1Go1FhcXc9d9yDCKoojFxQVMf3YO2ZVnIzkDQRCwubkJm82W
      2/z1ENQBUPKGEIJ/+Zd/wevXr+9J5vM8X/ENW6lUCstLS5iemWmIzWFLS0sYHBy8M9PPZDKQ
      yWRVCWXNz89Dq9VicHCwpPMQQrC0tISJicmizxGLxbC+tgowDAx6A5QqFdrb2+84QVEUsbS0
      CJlMhomJiQc/Y0EQsLy8jKGh4YLaMyaTSRweHuD6+hqtra1wubqefP3e7i4ODw+g1+uhUCgw
      MVn8vVcbSZLw6dMnDA0OwvhEAhigDoBSIO/evUNff3/FZ6+P8eH9e8y+ft0QuYDT01OwDANn
      jTq7SaKIYCiE4+NjTExMFP2ZnXo8ECWS26tQLKIoAkBOrfSxGXU6ncby8hI4jgPHcZDzPHi5
      HHKeRyAYLNj4F0MikcDx8RFGRkawvLSEoeH8mxDVmpOTE3Acl1dHQZoDoORNNma7vbODv//7
      v3/QoBBCsLOzg6urq8+x2JvKipuEMYPP/wPBjQgez/OQcRxMZjOMRuOz188akXpnbW0N4XAY
      kzWcObIcB6vVCrVajeXlZXR0dMBoNGJtdRWCKOLVq1fPrqT8fj9CV1cYGSldiTVr+LM81j9Z
      LpdjZmYWoijmPu9UKoVYLIbRkdFcMUElUSgUiEWjN3kBlwsLCwsYGBh4sqSyXtDpdNjf20Mo
      FEL4+hpd3d2PJrWpA6AUhN5ggFarxeXlJRwOByKRCJRKJXiex/7+PoKBIHp6etDVlU06Etz+
      fWd/7Ovr62h1toNlGaRSKSwtLcFsNmNoaOjR/ADDMFCqVAXN/hOJBDwnJ2hpba2qxotOp4PR
      aCxrGWaxqNVqTE5O4uDgAJeXlxgeGcH11RWODg/R/Vk99CHOTs+QSCYwPPx4V7CHeGx2/2gi
      8hHxt+wKALhxCrdzP8UKxuXLTdz/xjkajUbMzs7iw/v3ePO2uDxINTEajejp7YVcLodSqcSH
      Dx+oA6CUB+1ng+Y58eD4+Bg6nQ6CICCZTOYMfz4GWqvVIpNJw2azAwB4GQ+5QoGl5RVIkgit
      RgNBEBBPJMDLeIABopEoLi8vCgpnBINBRONJpE5OodOGchLKlcbv95ccey8nLMvmOnwRQnB6
      eppzTqIoYn5+Hm1tbXfCBmdnp5h6Nf3g+Z7jy9l9vk77oVVBLcJ9DMNAxsswNzcHp9MJp9MJ
      i9WKQCAAi8VS9fEUSnY1TQgBL3vczFMHQCmIiYkJuN1ucBwHn9eL8fEXBcVjJUnC3NwcCABX
      96+zz2yyavLlFAghiMfj4FgWSpUqZwxi0ShOjg7BcRx2d3eRTCYxMjIClmVxeHgI76UXHZ0d
      cDgcIIRgY2MDodAV+voHYDSZ8O6vP6Pzcy+GShKJREAIqXiculiy8ho2mw1/+MMfoNNq8WJi
      Agf7+xAEIeckuScMx1PclmAo9r2uhxzP2Ng4JEnC8fERPB7Pg4Jq9Q7DMODlcqRSqQeFBWkS
      mFIQWTGrs7MznF9coLu7B+l0+s5yHbhJ5D0UyiGEwO12g1co0N39ePjhsWtvb21CEgXIFUo4
      29pxdLAPrVYDAhZt7e3wnBzj8vIC6VQK/YNDsNl+3YW6sryM9jbHk2VxxSJJEgKBALyXlwiG
      Qnj79m1dJw0FQcD8/DxYhsH0rcbne7u7kMlk6OruxvLyMgYGBkvqKFYNQ17p8kxCCBbm5/Bi
      YgLzc3OYmJysqix6qWxubsLn8+Hbb7+9t3KmKwBKQWRroq1WK/75n/8Z21vbIETCD7//Gxwf
      HWFvbxeZjACdXoc3b95C9sUskmEYjIyM4MOH93C5Cmv0wjAMBgaHkLi1xZ3lOIgS4Oq6Ebvq
      dHWh09X1oBDY+IsXWFlaKLsDODo8hNfng9lsRk9vL8YawDjIZDJ0dnbi+LOGT5bevj58+vgR
      4XD4USdeCI3Yj+BLMpkMCG4Sw2azGfF4vKEcwNDQEGKx2IPPUQdAKQqlUol//Md/xPrGBoKB
      AM5OPRBFEdMzM+B5+b3kJyEEoVAIBoMBXq8XiUSyKMPAMMydH9/A4MMSAw+dOxqNlD0sIwgC
      jk9O8N133zXE3oTb+Hw+jDzQZ3lmdhbRaBT/9m//hvHxFyU7gUYnEPDnJg1Wmw2RSARWq7XG
      o8ofQghSqdSDebPG+sZS6obLy0vs7+9joL8fBoMB4+PjCAQC+Muf/wyfz5d7XTqdgs/rxdzc
      HLx+PxYWFxFLJDD75m3VZ4YqpQrJ1I2cRbnCBjKZDDabrap9EorhS0ntg4MDOBwOaJ/oPdDl
      6vrqjT8AGAxG+D73pNBoNIhEIjUeUWHclrq+9xzNAVCKIRgMwu12IxAIwGg0QqfTIR6Pw+fz
      4bvvfwPg14Sv2WJFR2dnzTaPfcn21iauQkG8efPmXoiqGHw+H2KxWMl6OxWBEHg/q48y+FwV
      Ipejq6sLLS0tjx7mdrvhcDhhMBjKNpRGygdkz7O/v49gMICJFy+gVKlwdnYGIZN5VF+/Xkmn
      01haXATLcXf2f9AQEKUozGYzZDIZFApFrirnhx9+QCKZzC05z8/O0Op0wumszU7Yx3C2tcPv
      8yGRSJRFV+jk+Bhj4+NlGFlhZDWSnnKsK6urSCWTePv2bUEOeHBwEPPz85iaen6zWL5UIx9Q
      Ds2eSCSCpaVFKOQK9Pb1or+/L/ecKAhgGizUB9zso5h9/RoL8/O5Pg4AdQCUErBYLNjc2kLi
      8BD/y3/7bzAYDBgcGMD7d78gnclALlfg1cxsrYd5B0IINtbXYDDokUqlSnIAhBCsrq7CbLEU
      XSmTyWQgiuKjUteiKN4z3CzLIhQKYdPtBieTIRaNQavTwmq1wuFwQKVSQZIkbG9vIxKJ4JsC
      VTyz1xgZGcHq6iomJiaKureHeM4JFNNxq5DjnyMrOvjb3/72wedlPN9w5aCCIEAURfA8j0Qy
      eSesRx0ApWi6urrQ2toKhUKRK3lsb28Hz/P413/9N1xdn8DV3Q2r1VY3CVJJkpBJp+EcGMTO
      zjYsX3Q1KwSGYZBIJEqSqP7Ln/8Mm/1mMxwhBET63GCHEIC52Q17O35PCJBJp6FSq/DNt98B
      ANbX1zAwMIBwOIyFhQUolUpcX12hu6cHr1+/LnpsSqUSqWSy6OMbkfm5OQwPP967IBwOw2az
      VXFEhSOJIgLBIK6vrxEKhW72AvByiJ8d1+0JBXUAlKKRyWT3kogMw6ClpQWzszMIhUJYmJuD
      2WzGbJFSwuWG4zh8+/1vIElS3qqckiRBEAQcHR2hp6fnzg8o+1wxNf/hcBgtra0FSy18ObZ0
      6qZc02q14rvvbpzC/Px8yZLTLMuCYZmyh25KOd/tY7/cLVzq7N/n88FitTyZ97BarQgGAnWt
      CbSyugqNRgOdTo+uru47k6+tzU1cXV3ldgpTB0ApOwzDYGhoKGcc1drqafDkC8uy95bykiTd
      C8VkeyBkMhk4HE5cXl7e0VWRJKnoDV9erxetraX1OpYkCclUErFY7E7pbeqLpX4xMAwDg8GA
      6+srGI3lNXilOoF8HiuUg4P9Z1dMer0eh4eHJV+rUiSTSUiShN7evgefHxgczDUJMplMtAyU
      UhmyfX9HRkbrtpkGzyuwsLAAURQRj8fx8cNHLC8v5xQoY7EY9vf3YTAY8B//49/B5XIhkUhA
      FEWsr6/jw4cP4Diu6HtzuVxYXV0p6b2RyWSYnX2N9fV1nJ2d5R5ny1Bx5fF4cHp6Cq22Mg14
      sved3V1e8+8IeT7HwPM8NBoNwuFwlQZVOAwevweGYTA6Nobj42NEIhHqACiVg2VZmExG2K1m
      nHpOav8D/4IXk5Nodbbh/fv3WFpawqvpabS1teNPf/oTPB4PFhcWoNFoMT7+ItfQPpVMYmNj
      Aw6HEzMzs7BYLHj37h3ev39f8PV5nodKqSxZ4prjOExNvcL19XVuP4LD4cDa2lpJCcuzszN8
      //1vylIq+xjl/k4U2zdakiQwbH7H9ff3Y2dnp+6kyQVBwN7eHnR5qN6OjIzC7d6kDoBSORiG
      AcdxaG1thUGnxeHBHjbd7oJ/9Nlyx9v/ygXLsmBZDhMvbhRGLRYLfvjh95Akgp7ePjgcjlyF
      j9lshk5vyOnqA0Bvbx9ev34Ds9mM81sz8HxRKBRfdtgsCo7jwLJczuC7XC64XC4sLS0hGAgU
      dU6lUglBuL95qJ4pVH0UAERRwMLC/D31VkIIBEG4s4GKEAKO4zA6OoqVlRUk6yRJnq1Is1qs
      ee1HYVkWHe3tNAdAqSw3FQg8enp60NbWhoPDQ3gvL2G1WcGy3IM/VEIIgsEgrq+voNPqcHx8
      BLlCjmwfypvm3a5n293lw9HBAWZnZ++N46HuVwzDPNplqbe3D3/9+SfY7PY7M2ZCCJLJJC7O
      zxEKhcDJZDCbzdBqtTCZTFCqVIjHy7MfgXzOYWTRarWYmprCx48fManRPNtr9zZZiW+lsvE2
      iRY6wfB4PGhra7vTkCgrWphIJHKOQCGXQ/r8eco/K2zOz8/j22+/LfctFEQsFsPS0hK6urpy
      FWX5YG9poQ6AUnmyKwGVSoXhoSFcXFzgTz/+Ed09fejqvt8/4OzsFFdXIdjtdiSSCYxPvLhT
      Zy9JElZXViCXy6EuteFKGfclDQ0P490vv+DV9HTOaGxtbUEul8Nut2P8xQQEQcDpqQenHg9G
      Rkdh0OsRCoXK4gBS6dS9hDTDMFCrVAWFKy4uLnB0eIThkeKrk0rlsRl8JcKIarUGiUT8zmPZ
      fMrU1FTuuplMJpdYz+Ysal3eHI/Hsb62jpnpGciKKEagDoBSNbLxWafT8oQAgAAAIABJREFU
      if/wt3+Lze2dez90SZJweXGBl6+mHv1xsSyL0bExrCwtY/LlVEklipIola3E0WKxYvzFBHZ3
      dxEKBiFKEr799rs7KwK5XI7u7h60t3dgcXEBRqMx1xSnFLLOpr+//95zDMvmbTglScLZ2RnG
      X4xDpao/xctyFxQQQnB+dob+gbvv29HREaanf22Gk9XTuf13Paicrq+t4+XUVNHlvjQHQKkJ
      Wq0Wep3unkzt0dEhOrtcz86sZDIZTGYzAkXGt7MQQnB4eIhUKlXSebLodDqMjo7h2+++fzKB
      yvM8JiYmEY/Fsb6+VvJ1s7uJ3W73PdEvhUIB4QEhsIfY3t6Gq9NVc+P/WKlnOY1/JBLB/Pwc
      TGbTPXnnyclJvHv3Dul0umzXKyfpdBr7+/swWyyl7fUo45golLxRqVQYHRnGwd4uBCEDQgjW
      VleRSMTz3mnZ1d0Fv99bkhLni8lJnHg8ZU/mMQzzrBNTKBQYHBoqqeHK7XP91//6P8NkMt97
      PxwOB048nryMZzQSgblOWh7eNviVCP1sbKxjYmICLpfr3mxerVZjdnYWi4uLZb9uqZyfn+On
      n36CRqMtSYCQEEJDQJTawTAMpl9NYW5hERaLFRqtGj2f+9bme7woishkip+lyeUK2O0t8Hg8
      ZVW+zBdBEMqaaA0Gg+js7LjzmFarhUqlgvfyEi2PNMOJRqOIfG4CU29UqnyYZdgnZ88qlQot
      LS04Pj5GZxXVP29XMkmShHg8jouLCwQCAWQyGchkMvzww+9Lvs7JyQl1AJTawTAMMpkMzs5O
      odVpCzL+WVxdXVicn8f3v/ld0eOIx2MwlCEJWwwMwyAej5VNbkEUhAdXHr29vfj08eOjDmB5
      eRk9PT2YmHxZ8hgaAVEUwbDMs+GTrq4ubGxswOfzVVwDKNvHOhFP5Mp55Qo5ZDIZWlsd6Onp
      LassRzqVog6AUltMJhOcDsejhuk5dDodLBYrMplM0ZIMsVgMLQWUz5UTrVYLvV6PZDJZcrcy
      URQg43lIkvSgE3isEogQkjMyXwt+vx8Gg+FZY5ptYbqzs4PT01MMDQ0VVE5bCOFwGIlEEi+n
      Hi9sKGfiudXhoDkASu3IGimNRgMhkyk6/GAwGuD1XhY9jumZWRwcHtZsZ2dLSytOTz3Pvu65
      ypNUKg1exhWVFBTF8m2uq2cEQcDGxjqOjg7zjp8zDIOBgQGMj49jfX0d7o2NioSlDAYDOjs7
      sLq6WvZzP4RaraYOgFJ7otEoNtbXcRUKFXxsOp1GwB+AXK7An3/8I/76809YXlrExw/vEQj4
      n/yhBvx+fPrwHivLS2AYBkdHhyXcRfEYjca8tGWeW/6r1Wq0tDqwtLRU8G5pNk8ZhEYmGo1i
      fn4ONpsNMzMzBYvlyWQyTE9PQ6n6/9u7099G0vw+4N+nqli8JYqkblH3LXWr7+65drM7u2uv
      YWeDAEl8vTDi+F3yJn+BgSBAXibImwCBkQAJjNgBfMQGnGRje3dnZmf6mJ5u3Ue3WrdEXTzE
      s4pVT15QxZFapERKvET9PsCiZ6Ri1SNtz/Or5/r9rPD7L//CkQvnHFubm1m38paCIAg0BUQq
      izEGs9mMkfHxS03hJOJxhEJB1Lvq4fV6MdDfD/E4zfPLly+hJBW0nsjeedLbt2/w5PFjpFQV
      W9vbFat/mx4J5dcBG4eP3u/gjf3xTU1NODw8RDAYhNvtxnsXZb1nKBhEfb0r6/dqyeLCAsbG
      xlCXR66c87S1tWF+bi5TKL4YOOdYWlpCU3PzlacCC0EjAFJRjDGMjY5iZyN9OrZQdfX1uPfg
      AY6OjtDY2Aib3Q6z2QxZljHQ349YLJrzsx0+H7788kvs7Oygu7v7VJrncgoEApBNprymFYxr
      0jmMhDNfV1UV4XCooB1NdfX1ODqq3uyWxaLrelHm781mMxJFOjdimJqaQn29q+zrMDQCIBUl
      CAJcLhcmJibw9Nmzgj/POcfs1DTu3Llz5s3J4/Xi3cpKzqmTtrZ2qIoC/+4uOru6Lv0zXEUi
      kcDS0iLu3buf9wLfyboFwvEpX2PLoCAIsFgsBa0DBAKBouf7r0oMVzo0lbkNY3C70+ctCgm0
      uq7jzZs3iMViEEURyWQSuqZDTaloa2urSKUxCgCk4k52YoqiFDQVwzmHySTlHDYbaZxzncg9
      ODjAwxNH/sttamoK4+O3Ck65bBySen9hWBCEgss4BgIBeN6fLqoxe3t78Fzx1OxJ3d3dmJyc
      xL33duykUilMTU6iq7s7MwWnqmo6sVwsjv6BAbS2yuCcQ5ZlmEymiqaUoABAKs5IFjc0OIhf
      fvklDgMB/PBHP7owuVUqlcLC3By6u3Pv5rDbbYhGIqg/zvQYjUbw/OlTTNy9m053UMEaBZFI
      BFar5UwagqtIpVJgOU4gS5KUdTTU0dGBxcXFqjkBXAobG+u4e7d4ZxxkWYa7oQG7u7tobm6G
      ruvY39vD6uoqurq6sbz8DqIoYnV1FYlEAqOjY0X9/7lYKACQqsAYw8HBAURRhMPhwPLbtxgc
      zl2cO5FIYGFuDoMDg2fqEp90eBhAZ3dv5t831tfR29uDz37+M3R2dqG/v79ib2CbGxvo7Lza
      1NPJNQHGGNbW1tDb25vz+mz1iy0WC2KxWI5PXH/JZDLn2YjLSmd13YJkkhAOhxEMBtHU1Izx
      W+nMtfUuFxYWFuDzdcLhcBRt5FFsFABI1RgcHERvby+Wlpawtb2NXb8fjU1NZzroYCCAtdVV
      3Bq/de7OofT0kAnffP0Cvf0DSKVUhEMhjI48QeAwgNsTE5c+PFYMiWSiKG+FJ0sqNjc3Y3Ly
      ddYc9Zqm5VxorsYUEMWQSqUwNzeLW7duFe2emqZhcnISE3fuwGazHaff6Dr1d8lkMmF8fLxo
      zywVCgCkajDGIEkShoeH0dfXh729Pbx78wZgDB2dnZBlGZFIBFsbG5i4PXHhGx1jDA+Oc/O/
      fPkSNpsN9+7eBWMMA4ODePduGYODQ+feo5SSyWTR88k7HI5z02jnehO1lXHrYbGFw2E4nc6s
      Izkjd04xT+8uLS3B5+uE/bgWhecaT51RACBVxVjUlGUZra2taGlpSe+UefMGOoBgMIj+3r6C
      Ok7G2JnFurq6Oky+fl2xALCxsYG2tvaiBQDjZzs6Oso6JaaqKhLxeNbncc6hV1m95ovs7+9D
      01Jobm7Bi+fP4WpowNjY2KnMqqqqYmpyEm3txdveyzlHOBRCT0/uabbrhAIAqUrGwjDnHFar
      FeNjYwiFQoiEw5dKn5yt8EylDn6pqoq9vT3cuXOnKPc72anv7e2iKUdeI7vDkfUtWdO0qp2j
      fl8qlYLfv4N4PI54LIaVlRWMjY/BbrdjYWEBt2/fzlz7bnkZY+NjRam2ZgiHw7Da7AXv2qpW
      dBCMVDVjr7skSXC5XOhob8ef/umfXGnOmnOO6ekpjI6NFbGl+VNVFWZZvtLis3EQzNhCa8zt
      d3f3YG117cz1ovhtwfj3SZIEXb8eI4DJydfpKbyBAUzcuYMPPvgAra2tcDqdMMsynj9/BkVR
      wDnH0dFRUU/VxuNxzM/NY3BwsGj3rDQKAKTqGdNCoiiip6cHv/Pbv431tbW8Eqhls7GxAYEJ
      5+4eKqVoNHrlxV9d1zPpIE6OAARBQHNLC94tL5+6XhAE2Gw2xOPxrPdLpfKrGFYpuq5jcXER
      iUQCHR0dZ4InYwzDI8NobW3Fs6df4cWL52htay3qm/r8/DzGbxV+ZqOasVgsxsuZe4KQq+Kc
      Q9f1dJGMw0O0tbUX9HlN0/D69WtIkoiGhgZ4PN6y7tHWdR0vXjzHo0ePi3K/93MD6bqO6ekp
      WK1W9Pf3ZwKEqqqYnk6fmg6FQggGg1CSSSiqiqNwGG6PBwzGllIhky9fVZTjHUTp/PTd3T1l
      LYauaRp+/vOfYWhwEO0dHec+2/i7AXy7NbYY0usJU5go0rRdtaAAQK4tzjnm5uYQDIXQ2tpW
      0Fwv5xyKomB3dxfBYAANDW50dHSUsLWnPX/+DPfu3S/Z3DvnHDvb29ja3oLP50MwGMThwQGs
      VitcLhcaGhrQ0NAAq9Wa2R108lTxyY7TmF5KpVKIxWKYm5tDV3dPWdZQjCIpzU2NWbcEl+P5
      gUAAi4uLGB0dy+z8qRUUAMi1xjmHpml4+/YtgqHQmf3Y+VAUBbOzM7hTxmpYqysrsByXHCyl
      qcl0pa+WlpbMm7PR0efq8M/DOUcymcT09AwamxrhcJSukhrnHIuLC3A6nWUNzifFYjHMTM+c
      W6TlOqM1AHKtGWcHBgcHcf/ePWxtbRa8QCzLMtxuN55+9RU21tdL1NLTOnw+bFwi+2k+OOeI
      RCJYXFjAnTt30N7eDkmSIIpi5k9RFDNTJIV0bEb67omJ2wgGggXnHSrkZ3j1zTdoa2urWOcP
      pOsCC6KAtdXVirWhlCgAkJpgBII7ExPY3tpCssB0vZ2dXXj85AlWVlZy7pYpJlEUcXCwj1Ao
      dOV7hcNhLC0t4s3SIpbfvsH62ipUJYnx8TG4XK4rdfjntX9oaBDrJQqYmqYBDAVl2ywFxhjG
      x8exv79f0XaUSu0sZxOC9MLfnTsTeD05icbGpoK3AXq8XiSTybLs9PjgyQeYnZ1F/8BAwadJ
      OedIJBJYW1tFo9eLRw8fXmpK5zKMe5tMJrS2tuDZs6d4+PBRUZ9rnAGpBsUsxF5taARAaoqx
      XfT2rVs42N87tyDM+zjniEYiRS/6nasjc9bVobOrCwcFvl2qqoqlpUWEggE8fvQIg4ODRX/D
      v4hxPqO1tRWu+nr81f/6S+xsbxft/slk8lIH/kphf38fzUWs/lVNaARAapIoihgfH8fM7Cx0
      ncNut+fVMSaVZMEdqLH1MJVSEQ4f4SgcRiKZgHC8lRI8PaUhCALcHg/cbjdEQQAHEAqFLlwI
      5pwjlUphZ2cH0WgEdpsND+7fr9hJZoMx7dbZ2YkGtxuNjdlPIF9GJBKpmh03qVSq4CnFYj2X
      c54J7qVAAYDUJGMkMDoyks4uurmJnt7ec3cIbW5uor394n3mkUgE29vb4FyHcPwcURQhyzJc
      Lhd8He2w2WyZt3FjX3o6jYEf21ubiMZi2NzYwPbODj784EM4nc7MVkxDIpHAu+VlmEwSLBYr
      fB3tcLvdZd2DfxHGGLxeL9Y3NosWADjneLO0hEePHxXlflfV3d2NLz7/Av395SnWrmkaZmam
      oSgKdF0H13UMDg2joaH4VdsoAJCaZbyhDgwMZKoy6TpHZ1dX1v33OzvbGBg4e8yfc45oNIrN
      jQ2IooCGhgbcv3f31D2MKZFsowejw5ZlGT6fDx0dHZn0DbquZ4JCMplEY2MT6urrsbu7C4Dj
      yZPHmXtXU8d/kizLsFosUJJJyJecttE0DS9ePMfdu/ewubmJ5pbmqjpxK8vlSRsej8cxOzOD
      W7fGM4cTOeeYm5/Hu3fLGBsbv9LUWDQagc327WiYzgGQmmd0tJntkYtLMFssaG1tPdWpPn36
      FR49epz5jyOZTGLl3TswBjQ0NKCnp+dUp1TMOXcjILx79w6BYBBtra1oamqq6o7/pEgkgsWl
      N+g6p7ayrut4s7SE/oGBrL+37e1tzM3NIh6P49NPPwXnvGqmgV6/fo2hoeGS1o/QdR0vv/4a
      jx8/yvp3KpFIYHp6Gt09vXAdV7grxMrKOxzs7yOlaWhqaobX66UAQG6Ok2/dBwcHWFlZhaIq
      aGpqhtvtxuzsDPr7+iFKEvb29qAqCgYHBzKLwtkOUJFvraysQk2lMrVwjd0zqqpCVVXMzs7i
      i88/Q3//ABrcDbh//wF0XU9n9ozHEI8n0NrSjM8//xz7Bwfo6urCd77znQr/VGl7e3s4PDhE
      XwkryE1NTmJwcODcoKfrOl58/TUmJu5k2pHPC0I6kd0sHj58CADY2dnB7t4eBQByMxnJ1Iyc
      Qjs7fmxubsJsNsPr9cDn86GxsTHT2V+Ht/BqsLy8jIPDAAKHh4jGouju7sHXL17Abk8nonO5
      XIhGo2hsbERLSwtMJhNsNhvsdjucTidkWYbf74csy3jz5g2GzikLWm57e3vY2tzC6NhYUf8+
      aJqG6ekpiIKAiYmJCwNMJBLBzMwMJElCKpWCx9sIj9sNy3FaD13XIUnSqft8/tlnePjwwZng
      QgGA3GjG1JDxJmoymWA2m+kt/5KMNMwvXryALMuoq6uDzWaDy+VCXV3dmYXubL/nk+k9LFYr
      6urqyv1j5OT3+5FIJIt6OjmRSGBpceHSReu3t7dxeHiIWCwGXecQBAFqSoXd7sDAwAAUJYnV
      lRVMTEyc+SwFAELw7V596vSvzphqu0oQ1TQNiqLgq6++wuDgIPb393EUicDj8aClgnvyo9Eo
      ZmZmcP/+g6Le98WL53j8KPvc/2VFIhEsLC5CFASMj49nXVSncS0hyP4mSi7nvB1R+TCCsclk
      wuPHj3F4eIjJyUmAc0y+fl3Mpl6qbbKpuOcvSnXi2eFw4P69e7hz507OHVUUAAghVcNIcfH0
      6VNMTk5ClmWMjIzgN3/zN2G32ytegN1ut8NsMRecw0lRFCwvv0Xg8BCq+m3xHeOQn3zFCnGX
      VT0bbQkhN5rRGU5OTqJ/YADLb98C+HZ01tbWhkg0/9QepcAYw9DQEF69eoWBgcGshYTSZzt2
      4Pf7kUwm0wcFBQHtHR0IBA4xOzcLURTh9XpxeHiYTrFdoqyqF6E1AEJI1Zifn0c0GoUgivB1
      dGROPhsL9YuLi7A7HEUt9H4ZqVQKM9PTGBoeOXM2YH19DfF4HH19fTCZTFkXuQEgEAigvr4e
      oijiqy+/xJMnT8o+CqApIEJI1bBarUgmk9A1DR6P51QRG0EQ0N/fj62trVMlMCtBkiQMj4xg
      bnb2TPrwYDAIn8+Xc1rHGNG43e7MafJKJb6jKSBCSNXo7OzMbLHM9Tbc1NiIw8NDeL3ecjbt
      DLPZjIHBAXzzzcv04bbjXD2KohR0gjkcDldsDYBGAISQqmEk8cuWq8nYXnp0dFQ1KSIcDkd6
      p9LBASKRCAAUPDqZn5/HyMhIKZp3IQoAhJBrJRqNFlzop5QYY6irr8PR0RE0TSsoiZ3f74fX
      48ka8MqBAgAh5FrgnENRlKrKEmpIr1VwrK6uoqurK6/pHM45VldW0NPTU/oG5kABgBBybSiK
      ApZHHp6Tif+Mfy8lSZIQOYogGAygsbExr88sLy+jp6enonmmqi+UEkLIe4wOfW9/H+tra6cW
      gDPv2sdv3ZxzTE9NwWKxQBAEKIqSuZKx9JSNxWpFKpVKV/tKJDAyMgKL1Xom26vAGCLRKOrq
      6s5NBV1XV4fPfvELfPTRR3n/PMFAAH29vYX+KoqKAgAh5FpIp2EwwefzYWVlBalU6kyKbgYA
      jCEUCuPjjz/Jea904jQdVqsVgUAAs3OzqK+vP/mw9J+MweFwYHl5GZIkoaenBylVRcPx+QQj
      UPj9foyOjcGT584kXdczSQcriQIAIaTqncwPZLPZ0NvXd+61gcPDc+938gTvwsI8Pvzww3PX
      Fvr6+hCJRDA/Pw+r1Yo3b99CEkWYLRb4fD5omgZHnnWngcJ3CpUKBQBCSNlpmlZwwjhd17Gx
      uYneC6ZNOOcQhPx31chmc167cBwOBx48eJBpiyAISCaTePPmDfx+P1wuF1rb2vJ6ZqnXJPJF
      i8CEkLJKJpP4u7/7u4Legjnn2NragruhIa/OOt9tlbquw3yJQ1jGwq3ZbMbY2BjGxsYK2s0T
      j8chy8XNKnoZNAIghJSV2WzGJ598UtDed0VRsLu7i/6BgbyuF6X87i0IAmLxeOaNPJVKYWpq
      CgxAvcuFnp6evIJDc3NzXs8zrK6uYqC/v6DPlAIFAEJI2Rl1lvPBOcfc/Dy6urvz/oypgLMC
      iXgCz54+TSedAzA6MgoAODo6wvT0NG7dupX3vfLBOUc8FquKw2wUAAghVY1zDnCO5bdvIYgi
      uru7zx09cM4LOiz2+PFjSJKU+Yzxxm+32+H37yASicDhcFzthzghEAigoaGh4GknxhhSqdTx
      GocAURSvvJZA6aAJIVUtmUwiFArh3bt34Jzj4OAQJtkEgeVewmxtbUVbnguyFz17dnYWd+9d
      rl5vNq9evcLw0FDBIwDGGI6OjmC1WqHrOhRFgcPhyASEbKU4T5Y6Pfl9A40ACCFVTZIkOJ1O
      mEwm+HydGBgQynZ6NhaLoa6+uEXpLRYLVFW91BQQYwwmkymzgK6qKkRRRCQSAWMMsiynTyVH
      IhAEAalUCiaTKZOjyGKxIB6PQ9f19E6mov5khBBSZIqi4JtvvsHc3Hxm+2Wp6bqOtbU1TE9P
      XbjttFCNjY3Y3t6+8n0kSYKmaUgkErDb7bDb7UgmkwDSgcJms8FkMkGWZdjtdmialkmPYbPZ
      YLPZKAAQQkprd3cX0SuWctR1HSMjw2XbOjk5+RpgwAcfflj007putxvBYPDK9zHOUui6jng8
      jng8fqqATja6rmfWDgRBoABACCmdvb09bO34MT0zc+l76LqOw8NDRCIRHBwclPwQ1cHBAaw2
      Gzo7O0uSeXRtbQ3t7e2X+qxRNzmVSiGRSGSmfIzpnYsCpCiKmaL0yWSSAgAhpHQURUE4HEZr
      S8ulPn9yEVOSTHj9+hVWVlaK2MKztra24PP5SnJvXdexv7d36QBgsVgyJSidTic455kttYnj
      wvLGWgDnHLIsnzq0xjmHzWZDIpFILxbTLiBCSKmoqopwOAy3232pqRTOOeLxOCYnpzA0NHRm
      F0spRCIRzM3P4eHDh0W/9/r6OkRBuHQAKDYaARBCSsZkMsHj8Vy60+acH091pFMxlyN7ZiKR
      gKIomQXVYvL7/RWvZXwSBQBCSFULBAJwuRrK9jyv14v+vn48/eorhEKhot5bEkVomlbUe14F
      nQMghFQlY8HT79/F8PBwWZ9t5PZZX19H4PAQ3UUq2yhKUlFHMYwxKIoCTdMyc/+F3J8CACGk
      qnDO8dOf/hStra0IBILo6uqsSOGU5uZmNDU14dnzZ0UJAH6/Hxazueg5gBRFgd1uB5Bev3A6
      nQCQWS8xtnye/JpxnoICACGkqjDG0NHRAV3Xi56IrVDxePzKHTbnHJFIBPt7exgfHy9Sy04z
      AqSRIymZTGYOfRknjxOJBCRJgqqqqKurQzQapQBACKk+g4ODeP78eaWbceWTx5FIBDMzM3A6
      HBgdHS1iy77FOUc0Gs0kwWOMQVVVOBwO6LqOZDIJWZZhNpthMpkyKSI45xQACCHVRxTFzH71
      QlJHF5vVakU0ErnUZ/1+PwKHh3j86FFJp7CMtA+xWCyz/59znjnwZez/B3DmT9oFRAgpCqPQ
      erEMDQ1hbW21aPe7LPESp4ETiQR2trcxMjJS8vULI/un3W5HLBYD5zyT7uFkFlBVVaFpGhRF
      yYwEKAAQQopCUZSiBQAj62VLSwv29/eLcs/L0DQN+iW2bS6/fYu+cwrXG64aHIyTvcY/G3UL
      7HZ7Zj3A+NOYyjKmhqxWKwUAQkhxuFyuoubOEY5PzAYCh0W7J4DMG3E+9vf30VJgGotUKoVo
      LJbZjZOLIKTTWhdjhPD+1I6xdnFyJCBJ0qkiMrQGQAipWowxCIIAi8WCZDIJs9l85XsqioKp
      qUnE43GMjo7B7XbnvNYIFEbunXxwXcfy27foz+Pt/+QzSs0YBbz/LBoBEEKqliAIGBoawsbG
      elGmlxKJBCSTCR9+9BEWlxbPdIgnO+S9vT1s72yjJ896ALquY25uDh6P59zAcvJ6oDTpLYx7
      ZqsMdvJ5FAAIIVXNbDZjaGgIq6srV76Xw+FIp0EWBLjd7jPrC5OTk5iZmQYAbG9vY2hwMO8O
      evntW3i93oJz/RQ7ADDGEIlEMruAjK/F43FEIhHEYrHMM2kKiBBS9RwOB0wmE+LxGKxWW16f
      WVlZQTweh6ZpsFgssNvt0HUd5uOc+YODg3j1zSusr6/D4XBAlmU4nA6EQyHEYjGEwiHIBUw7
      hcNh9Pf3F/yzXXVkY+z7FwQhc9DLmPM3JJNJSJIEm812KqMqBQBCSNVjjGFkZARTU1NoaWnN
      62yAKIpIJhMYGBzMpKXmnJ+a0rlz9w50XUcwGISu6/B6vVhbW8PU9BQ62tsLWncwm80Ih8Oo
      r6/P+zNXnf9njCEajUKW5UxOICAdVIyKYe8fDDNEIpF0AChHjm1CCLkKSZJw+/ZtTE9Pw+Px
      ZvLf5GIymVDvcmWuc7lcWa8zpoMMnZ2d6OzsLLh9gigW/DZ/1QBg9N0mkwkmkwnRaDRT/9dk
      MuXs243SkEIoFM4UCyaEkGomiiJu3bqFYDBwYarm9fV1RCKRsvVtyWQSdXV1ZXmWwTjodRHx
      OA21sQicyR3U/uA7fzg1O48mlwN1TieNBAghVY0xBq/XC79/F4lEInMQ6n1tbW0IhUIQBKHo
      GTiz2draQmtra1n7UCOzZyqVgqIoMJvNEAQBmqadWgOQJCmzHpJKpWA2m6EoCgRFkPH5ZgT/
      5n/8H/yXP/tr7B0clK3xhBByGentoYMQBIadne2s1zDG4Ha7sfLuHRRFKXmbjJ025WTUBDab
      zbDZbJlO32KxnBkZ2O12WCwWWK1WaJoGm8327TbQhGDG36+G8G//+1/h9cwcTQkRQqoaYwy9
      vb0wmUxntnMaKZg9Hg/a2zuwvLxc8vaIxyd7y+3kyd6T/zvvOuPPM63dT4n4D3/zFf7ipz87
      tY+UEEKqDWMMnZ2dCIVCmbd8zjn29nbx6tU3WFtbw8HhQcmLsCcSiUx+neska7hSmIQ/n1zD
      v//jP8cXz79GPJEod7sIISQvsizj9u1b2NraRDKZxNraGrZ3dvDkgw+g6RrW19ZgLXFK6TdL
      S5c6A1BpOccrOhPwej+J//SzKfzRn//vqhoN+P1+mqIihGTIsozh4eHjzn8bExMTkCQJPT09
      +PiTTyCZTCV7diKRQDKZvDD5WzW6cMKKCyKebYXwl3/7WVFzfV8FmJISAAAUmElEQVRFY2Mj
      7VYihJxisVjQ3d0Fu812Ks/ORecFLisSieDVq1eYnZkpWbWvUsvrJLAOAX89vQav62t89/GD
      ine+lVhoIYRUN8YYGhsbYbVa8fbtW3T4fJksmMVmJH6buH27KFlKKyXvnjTFRPy3L2bwP//m
      /yFBawKEkCrEGIPD4cDAwADW19YyqRHeFwwGsbu7mzUbqKZp0HUdm5ub+OLzz3FwYms85xzL
      y8v46ssv0dXZea07fwAQf/BPfvcPd8PRvC7WIGBxL4zdzXXcGeorWXQlhJDLMlIjuFwuvH3z
      Bk6nMzNrkEqlsLy8jJnZWXAwpNQUnCcOwC4uLmJ9bQ3rGxuw22zwer2IxmJoaGgAAOz6/VAV
      BRMTE5nqW9dZwXMpnAl4thnCf/zjP8Pnz15ALaBYAiGElANjDBaLBR0dHdjd3c18/fXr15Ct
      Nnz0yXfh6+zC68lJfPXll9B1Pb19dHcX9+/fx8MHD9DV1YWtrS10dXUBAKLRKDY3N/Mq9Xhd
      XCobqM5EfHOgYvLn09gLHuHXv/fxqfwS7xcdqPSaASHk5mGMwePxYGV1Fbqu44svfgmX24PG
      xiYkk0kszs3gyaOHcDgcmJ6aQvjoKJMwzpjdsFqtmJ2ZQVNzMzY3NjAxMVHJH6no2L/7k//N
      p9Z3L74yB5mn0CRz9LZ48I8//RiW4xwTSUWBklQgyzI8HnemPiUFA0JIOR0cHOAXn32G/qFh
      eDxebG1sYM+/g/v370E+rg0Qi8UgSVLm3w2KoiAej8Pv96OnpwemEm4nrYQr1wNQmIQNFdhY
      C+H1f/0LSIwjxQFVB1IckAQGt8ww1N6If/i9j+DJo1QaIYQUS0NDA9ra2lBXVw/OOQ4P9vHB
      B09OXZMroZwsy5BluaAc/9dJ8fZTMoYQZBxwM0IwIyaYoYhmxJiMDdWEv10J4o/+8v/mXJUn
      hJBSYIxhcGAA21tbmeyZJK2sG+qnDpL4+y+fl/ORhJAbjjEGp9MJrqmUQeA9ZQ0AnAl4sfCO
      IjAhpOzUlEZrkO8pe03g5d0AFEXJq6YnIYQUgyAICAUDePblF5nMoDs7O4jH47BYLBAEAclk
      EslkEqqqIplUYLfbYDabUVdXB5vNBkVRoCgKUqlUprCKsX2Uc54pzMIYQ19f36mCLNWq7C1M
      iGa8W1nF8NAgRWNCSFkwxvCjH/4QT58+hZJM4uXLl1haWkJHZxfqXS6YzRbIsgxngwOybILA
      BCiqinAohLXNrczapbGbURQlSFL6T9EkwiSZYJIkSCYTwqEQFheXMDo6UuGf+mJlDwC6KGN5
      YwvDQ4PlfjQh5IZijEFRFASCIejgqK934Tvf+xR19fU5X0Rls/lSp30tFgsWDveRTCarPlVE
      RcYoX8yt4EffTdXcnlpCSPWyWq1wezzo7R8o6ewDYwwcLFOjt5pVJK3megKYXVikFXlCSNkI
      goDOjnYclqHuucDYtciVVpEAwAUJU29WK/FoQsgNxRhDe3s7IuFgyXciutxu7O7ulfQZxVCx
      xPpvtvcvvogQQoqEMQZBEDAyPIyN9bWSPsvr8cK/e/kUO+VSsX1Ka4EIYrFYyar1EELI+4x6
      Ae0tzdjf24W3sakkzxElCQ0eDzY3Ny9dkF7TNCwufjtVzhjDjt8PxgRoqRQ+/fT7V25nxUYA
      qmzD23crlXo8IeQGMkYBzc3NCBwelvRZTc0t8PsvPwpYWlqCZLHC09QCT1ML3I3NmLh7H/ce
      PoKzrq4obazcSQVBQiIer9jjCSE3k7GXXzaZwDkv2Y4gURQRTyYQj8dhtVoL/nwoFMKtu/1n
      vp5MJLCzs41ffPbZ8VcYgG831FgtFjx4kF/p3ooeVaPavoSQShAEAY1eD8LhEOrrXSV5hiiK
      uH3nHp6/eI5PPv6o4EBjt9sRjUbPTJObLRb84Fd+nPNzC/PzCIVCmdoG56lYD8y4DlGq/m1S
      hJDawxhDT08P9nZ2SrodXRRF+Lq78a7A6e79/X0EgqFLrZHabDak8qzUWLlXcK5fi1wZpDjo
      zAepNoIgwOtxIxbNryb6ZTU3tyAQCiMcDmf9vpFL6OR/I6FQCO2dnZd6XuDwAE6nM69rKxYA
      BK7DbqMdQDcB5xyff/45FEWpdFMIyWCMYXBwEFubGyV/QRkcHsbc/Pypr4VCIczPz2NychJf
      /PJLvHz5EltbW9ja2sLh4SH4Jc4qcM6hFJCComKv4HauwNdxue1R5HphjOHhw4eU+oNUHUEQ
      0OCqRzKRgOUSC7X5EkURFpsdr169gqqqSCSTEE0yfL5OmBQF/cOjCAQOET6KAADqGtxoamou
      +DmMMTR4PAgGg3mtAVQkADDGMNreSFNANwil/ybVamhwEE+ff42+gdLmCBoYHIKmaTlTRLjd
      Hrjdnis/x9fZhXdvFnH3zp0Lr63MFBDXcaunrSKPJoSQk0RRhFkuz8toOfIDybKMSCS/dY1M
      AChnbn5zKo6x4aGyPY8QQrIx5v41rbaqFLI8t9gLwHH60hOLIKUOBk96W9DgclFBGEJIxcXj
      cRwdHVW6GUWj6zpMeY40BODsFr1SroibUgn86Mk96vwJIRWnKAqmZ+cwMn6rZvqkaDQKi6VK
      dwHdbW9AW2trzfyyCSHX19T0DHxd3TWVlSAajcDtdud1bVl/ajtU/MYnj65FoQRCSO2TZRNU
      tbbOp4RDobxLWZYtAJiRwh/84CE6ae8/IaRKDA8NYWtjvdLNKCpFUUoXAAqdumGMQeIafvPx
      CO6Oj0IQBJr+IYRUBUmSgPfSMFx3drsDwWAwr2sLDgAF/6J0DT8e7cD3njygzp8QUlVEUYTF
      Yil5ichy8nV2YnVtPa+EcCWdAmLg+KTLjX/06ScQRZE6f0JIVWGMYWR4GGurK5VuStFIkoTO
      7h58/fIlYrHYudeWNACMeyz47R9/D7IsU+dPCKlKVqu1gmmRS8PhdKJ3YAhLS2/Ova5kP3eX
      DfiDn/wQdrudOn9CSNVKjwJqbzHYZrPhKBo5d9q+JAFA1hL457/6CVz19dT5E0KqXn19PXRN
      q3QziooxBrPZgvg5pXeLGgBMWhJ3PTL+9U/+AXq6OmvqcAUhpHYxxnD71ji21tdqakFY1/Vz
      X8KLdhLYa+L4/V/7GEN9vTCZTPTmTwi5ViwWCxpc9YjHY7Db89tHX80459B0/dyAVpRXdDtU
      /Mvf+A7Ghgap8yeEXFtNTU3Y8+9WuhlF4ffvoKXRm7WusK7rWFhYuPoIgOkafvJwEH3dXdTx
      E0KuNavVCvDamAKy2ezY29mC3+/H0ps3sFqtUFX1eFpIgK+75+oBYMxjwQ8+fESdPyHk2uOc
      I6VdfIDqOnA6nZie3IUOhjv3HyKVSkGSJCQTCchmM0RRvFoAqGMp/M6vfB+yLBerzYQQUlGp
      GikOwxjDkw8/zmzGMfppq82WuebyawCc47tD7ehoo9KOhJDaEI/HYTbnl0v/OrhoJ+alA0Ad
      U/DpYyrsQgipHbIs55VDp1ZcLgBwHd8d8sHjuXoFe0IIqRbhcBg229ldM7XqUgGgDio+fXKf
      3v4JITVD13WsrK6irf3m1CwpPABwHd8b7aK3f0JIzdCPD0wpinqjXmwL3gU0UCfhx9/98Eb9
      kgghtUvTNHDOMTM7i/bOrko3p6wKGgG4BBX/4te/D/uJbUSEEHJdGZ3/3v4+lJRWUzuA8pF9
      BMA5ZCUCt1nAvsKQkm2QuYrf+/5DtDQ30ds/IeRa45xD13Xs7e9jcekNnHV1aGvvqHSzyi7n
      FJCUjOLXPnwEk9mC//yLKfza7W5MjA5Thk9CyLXHOUckEsHG5hb6B4cq3ZyKyR4AGEPc4cXf
      //IpvvPkIX73gxF8+tETqulLCLn2jLd/VVXBBLHSzSmJ/b09vHv7FpL07c+XrSxMzhGAR2b4
      /X/2W+jydVCnTwipGcbb/7vVNbT7OivdnJIIhYIYGxtBQ4P73OuyBgBRT+H3f/CYOn9CSE3h
      nOPo6AiLb5bR0Vmbnf+32IX9d9YJfZ0JiERj1PkTQmoK5xzzC4to9/kq3ZSqkDUAcDDsH0XL
      3RZCCCkZY+4/lUrRy+2xrAHAhQS++/BuudtCCCEllUqlkFSSlW5G1cgaAGK6AP9ubZRFI4QQ
      w9zcHLq6eyvdjKqRfQ0ADAITwHm2jUOEEHI9JZLJUwVRbrqsAcCKFBobvRQACCE1JaVplW5C
      VckaABwmATaKkoSQGkMvtadlDQCdjQ3lbgchhJSUpmnQdQoAJ50NAJzD5bw5FXEIITfD/v4+
      Gtznn4y9ac4GAMYQjsYq0BRCCCmd9Y0NeLyNlW5GVck6BbQdCJe7HYQQUjKxWAwpTYco1mby
      t8vKGgACkUSmUAIhhFx3a+vr8DY1VboZVSdrAFCZiFAoVO62EEJISQQCQTgczko3o+pkDQBJ
      SDgMBMrdFkIIKQna/59d9pPAooSVLUoFQQi53lKpFBYWFmnxN4cc9R0ZligAEJJTPB5HgEbJ
      VW9lZQXJlEbbP3PIGgAY13G3j/JlE5LLzs4OolFKmV7t6uvroWmpSjejamWtCFYHBbdHh8vd
      FkKujZ6enko3geTBbrcjHrt555pkkwxVVS+8LusIYKC5ATabjYomEEKuNUmSoN3ABeDW9nas
      rq1deF3WVBC+RhcAUAAghFxra2trYEKOpc4aJkkSbHY7Dg4Ozr3uzG+GcQ29rekDExQACCHX
      maZpkKSsM901r7evH+ubmwgGgzmvORMALFxFa0tzSRtGCCHl4Ha7YTabK92MihAEAYNDw1hZ
      XUM4x8HeM6HRIXK43W56+yeEXHuJRAKynD0AHBzsY311DaqqwGy2oMPng9vjKXMLS0sQBAwO
      D2Nxfg59vb1wOk+fhj4TAHqbPWCMUQAghFx70WgUyaSKmekpuFwNcHvc4DrHyso7WC0W3Lt/
      D4wxaJqGydevIZvlmksZkQ4CI1iYm0VvTw/q6+sz3zsTAEzizVswIYTUpkgkgoNgEENDQwgc
      BrCyvAwA6OrqOvU2LIoibk9MYGF+HlabHb7OTqiq+t5WyhzJMfPMmZnrMqvVWvIspYIgYGhk
      FAtzs+jp7obLld7ocyYAJFPpLVM0AiCEXHcWiwWjo2Mwm82w2exo7+jImeVYFEWMjo3B7/fj
      6+fPYHfYcboXPPlv/NQ/MWTrL/l7n8n2fUBRVNyauFPyPtcIAksLC4jH42hpaTkbAPbCsRu9
      ck4IqS2FdqvNzc1obi7fRphgIIDpydcYHb9V8pEAYwztPh9ef/MSk5OTZwOA3WyiogmEkJpg
      tVqRVJKQq3gnkKuhAUMWC6ZefwNXgxuMCZAkCSaTCSaTCfUuV2ZdVlGSORe1s4nH4zjY30cg
      cJiuiaxpcDjsGB0dhcPp/DYACFzHba8Vv/cbP6AAQAipCfX19dja8cPprKt0U85ltVpx9959
      xGIxJBIJJOJxxKIRaJqGpcUFAIDZbIbFYkYkGoXTWYfOzi6Ew2H4/TtgANp9nYjHYjg8PICW
      SkFVVTgcDni8XgwPDcFssQAAVFVFIpGAxWL5NgCMu2X8q9/6CWRZpvl/QkhNcLvdWFhaQktr
      a6WbciFBEOBwOOBwOM69jnOOcDiMlXdvYbXZMTw8BM6BzY0NWK1WDA0NZfrxyNER9g/2sb21
      BV3XoSgKbDY7kskEhoeH0wFA1FP41Uf3qPMnhNQUQRBQ73Rm3nhrAWMM9fX1qK+/BVVVsb+3
      BwCw2WyIRCLY3t4GkD4F7ayrg9frRUtLG0wmE4TjtBi6ruObl1+nA0CnjWF0eIg6f0JIzent
      7cXcwiJ8nZ0A0h1ordQ7X5ibgyBKsFgsEEURLS2t6O7phSiK5/bngiDgzt176QAw6mumzp8Q
      UpNsNhvaWpqxv7cHb2O6MljNBAHG4Ov0wW4/f9ooG1EU07mA3E5b0dtFCCHVorW1Fa76Ohye
      yI5JL72AwABYTKZKt4MQQkqqrbUVmqogkUhkvnbTg4DAAfhDRzf+F0EIqX2jo6PY2lg/Nf1z
      k/s+AQACRzevZBoh5OZhjMHn8+Fgf//M128iAcg7lxEhhFx7ba2tCAYDZxaBr28QuHy7BQYd
      t3vai9gYQgipXowxtDQ1IxwOV7opFSd4BRW3RkcyBwQIIaTW9fb2YHdnp9LNqDjhn/7q9y88
      ekwIIbXG43YjHrvZ65/CRSfGCCGkFg0M9GNzc6PSzagomvchhNxIoiiitbkZRzd4LYACACHk
      xurp6UHgYB+6rle6KRVBAYAQcqN5PJ7MKOCmTYdTACCE3GhdXV3YObEjyKi+dRNQACCE3GiC
      IMAkiTV0MCx/FAAIITdeo9eLSCRy5uu1PhqgAEAIufH6+vqwu7Ods0ZArQYBCgCEEAJgfGwM
      62urOb9fi6MBCgCEEALA6XTCYbNnnQqqVRQACCHk2NDQIHZ3ts+9ppZGARQACCHkGGMMPT09
      p7aF1jIKAIQQckKj13tjksRJlW4AIYRUE0EQ0OXrwO6uH01NzVmvYYzl3DFUCqFQCJsbZxPX
      7e3uoqen99L3pQBACCHvaW5uRvjoCEdHR3A6nZVuDtZWV9He0YH3q3+1t3fAYrVe+r4UAAgh
      5D2MMQz09+PV69ew2WwQRbHC7QHq611FX4CmNQBCCMmCMYa+3l5srK/n/P51RwGAEEJycDqd
      0DUt5/evexCgAEAIITmkF3trt1YABQBCCMlB13UkEolKN6NkKAAQQkgOGxsb8DQ2VboZJUMB
      gBBCcmhsbETkqHZrBlMAIISQHMxmM7RUqtLNKBkKAIQQkoOmadD18p34LTcKAIQQkoMkSZBl
      U6WbUTIUAAgh5ByaRttACSHkxuGcv59+p6ZQACCEkBx0Xb/2p33PQwGAEEJyEEURQg0PASgA
      EEJIDowxtLa1IhAIVLopJUEBgBBCzuH1eBAKBivdjJKgAEAIIeew2Wwwm0xQVbVibShV8TEK
      AIQQcg7GGPr7+7Cxkb0uQDlouo6Xr14VvQwlBQBCCLmAzWaDXsGUEIwxpOwe/PyXXyFZxOyk
      7PDwsHbPORNCSJFwziu2JTT95s8AFLcN/x8WBlGM7wBOLwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='partially vs fully for location' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
